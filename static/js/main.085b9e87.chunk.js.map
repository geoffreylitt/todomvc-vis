{"version":3,"sources":["devtools/ActionList.jsx","devtools/Line.jsx","devtools/LineGraph.jsx","devtools/CategoryGraph.jsx","selectors/index.js","constants/TodoFilters.js","devtools/ReduxVisMonitor.jsx","containers/DevTools.js","components/TodoTextInput.js","components/Header.js","constants/ActionTypes.js","actions/index.js","containers/Header.js","components/Link.js","containers/FilterLink.js","components/Footer.js","components/TodoItem.js","components/TodoList.js","containers/VisibleTodoList.js","components/MainSection.js","containers/MainSection.js","components/App.js","reducers/todos.js","reducers/visibilityFilter.js","reducers/index.js","index.js"],"names":["Action","styled","div","_templateObject","props","selected","active","ActionList","_ref","currentStateId","stagedActionIds","actionsById","selectedStateId","setSelectedStateId","jumpToState","actionDivs","map","actionId","action","react_default","a","createElement","key","onMouseOver","onClick","type","Line","path","stroke","fill","strokeWidth","d","defaultProps","GraphContainer","svg","LineGraph_templateObject","CurrentValue","_templateObject2","LineGraph","selectedValue","data","width","height","lastDataPoint","slice","graphData","concat","stateId","value","activeData","filter","inactiveData","xScale","d3","domain","range","yScale","line","defined","isNaN","curve","x","y","selectionMarker","bisect","right","getStateIdFromMouseEvent","e","_d3$clientPoint","target","_d3$clientPoint2","Object","slicedToArray","xPos","yPos","position","invert","find","Fragment","onMouseMove","devtools_Line","undefined","CategoryGraph_templateObject","CategoryGraph_templateObject2","CategoryGraph","padding","uniq","activeColor","index","Math","round","step","length","xPosToValue","rects","color","bandwidth","CategoryGraph_GraphContainer","CategoryGraph_CurrentValue","getTodos","state","todos","getVisibleTodos","createSelector","visibilityFilter","t","completed","Error","getCompletedTodoCount","reduce","count","todo","ActionCreators","reset","Panel","ReduxVisMonitor_templateObject","GraphLabel","span","ReduxVisMonitor_templateObject2","_templateObject3","VisMonitor","_this","currentStateIndex","setState","_this$props","this","computedStates","skippedActionIds","dispatch","todosLength","visibleTodosLength","completedTodosCount","style","marginTop","href","fontWeight","devtools_ActionList","devtools_LineGraph","devtools_CategoryGraph","PureComponent","Component","update","propTypes","PropTypes","func","array","object","number","monitorState","shape","initialScrollTop","preserveScrollTop","bool","stagedActions","select","isRequired","DevTools","createDevTools","redux_devtools_dock_monitor_lib_default","toggleVisibilityKey","changePositionKey","changeMonitorKey","defaultIsVisible","defaultSize","ReduxVisMonitor_VisMonitor","redux_devtools_log_monitor_lib_default","theme","SliderMonitor_default","keyboardEnabled","TodoTextInput","text","handleSubmit","trim","which","onSave","newTodo","handleChange","handleBlur","className","classnames","edit","editing","new-todo","placeholder","autoFocus","onBlur","onChange","onKeyDown","Header","addTodo","TodoTextInput_TodoTextInput","ADD_TODO","DELETE_TODO","EDIT_TODO","COMPLETE_TODO","COMPLETE_ALL_TODOS","CLEAR_COMPLETED","types","deleteTodo","id","editTodo","completeTodo","completeAllTodos","clearCompleted","setVisibilityFilter","connect","Link","children","setFilter","cursor","ownProps","FILTER_TITLES","_FILTER_TITLES","defineProperty","Footer","activeCount","completedCount","onClearCompleted","itemWord","keys","FilterLink","TodoItem","handleDoubleClick","handleSave","element","_this2","checked","onDoubleClick","TodoList","filteredTodos","actions","TodoItem_TodoItem","assign","VisibleTodoList","bindActionCreators","TodoActions","MainSection","todosCount","readOnly","containers_VisibleTodoList","components_Footer","App","containers_Header","containers_MainSection","initialState","arguments","rootReducer","combineReducers","toConsumableArray","maxId","max","objectSpread","areAllMarked","every","store","createStore","reducer","instrument","render","es","components_App","containers_DevTools","document","getElementById"],"mappings":"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","file":"static/js/main.085b9e87.chunk.js","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport styled from 'styled-components'\n\nconst Action = styled.div`\n  display: inline-block;\n  width: 80px;\n  background-color: ${props => props.selected ? \"#ffcece\" : (props.active ? \"#a6d2ff\" : \"#eee\")};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin-right: 10px;\n  padding: 5px;\n  border-radius: 5px;\n  cursor: pointer;\n`\n\nconst ActionList = ({ currentStateId, stagedActionIds, actionsById, selectedStateId, setSelectedStateId, jumpToState }) => {\n  const actionDivs = stagedActionIds.map(actionId => {\n    const action = actionsById[actionId];\n    return <Action\n      key={actionId}\n      onMouseOver={ () => setSelectedStateId(actionId) }\n      selected={actionId === selectedStateId}\n      active={currentStateId >= actionId}\n      onClick={ () => jumpToState(actionId) }\n       >\n        { action.action.type }\n      </Action>;\n  })\n\n  return <div>\n      { actionDivs }\n  </div>\n}\n\nexport default ActionList;\n","import React, { useState, useEffect } from \"react\";\n\nconst Line = ({ path, stroke, fill, strokeWidth }) => {\n  return <path\n    d={path}\n    fill={fill}\n    stroke={stroke}\n    strokeWidth={strokeWidth}\n    />\n}\n\nLine.defaultProps = {\n  stroke:       'blue',\n  fill:         'none',\n  strokeWidth:  2\n}\n\nexport default Line;\n","import React, { useState, useEffect } from \"react\";\nimport styled from 'styled-components'\nimport * as d3 from 'd3';\nimport { clientPoint } from 'd3-selection';\nimport Line from './Line';\n\nconst GraphContainer = styled.svg`\n  border: solid thin #eee;\n  cursor: pointer;\n  margin-right: 10px;\n`\n\nconst CurrentValue = styled.div`\n  display: inline-block;\n  color: #aaa;\n`\n\nconst LineGraph = ({ data, width, height, selectedStateId, setSelectedStateId, jumpToState, currentStateId }) => {\n  // add another data point to line graph, to align with category graph\n  // todo: think about a more robust way to do this... kinda hacky\n  const lastDataPoint = data.slice(-1)[0];\n  let graphData = data.concat([{ stateId: lastDataPoint.stateId + 1, value: lastDataPoint.value }])\n\n  let activeData = graphData.filter(d => d.stateId <= currentStateId)\n  const inactiveData = graphData.filter(d => d.stateId >= currentStateId)\n\n  const xScale = d3.scaleLinear()\n                 .domain(d3.extent(graphData, d => d.stateId))\n                 .range([1, width - 1]);\n\n  const yScale = d3.scaleLinear()\n                 .domain(d3.extent(graphData, d => d.value))\n                 .range([height - 1, 1]);\n\n  const line = d3.line()\n      .defined(d => !isNaN(d.value))\n      .curve(d3.curveStepAfter)\n      .x((d) => { return xScale(d.stateId); })\n      .y((d) => { return yScale(d.value); });\n\n  const selectionMarker = d3.line().curve(d3.curveLinear)([\n      [xScale(selectedStateId), yScale.range()[0]],\n      [xScale(selectedStateId), yScale.range()[1]],\n    ])\n\n  const bisect = d3.bisector(d => d.stateId).right;\n\n  const getStateIdFromMouseEvent = (e) => {\n    const [xPos, yPos] = d3.clientPoint(e.target, e);\n    const position = {\n      x: xScale.invert(xPos),\n      y: yScale.invert(yPos)\n    };\n    const stateId = bisect(graphData, position.x, 1);\n\n    // clamp selected state to the last real data point\n    if (stateId <= lastDataPoint.stateId) {\n      return stateId;\n    } else {\n      return lastDataPoint.stateId\n    }\n  }\n\n  const onMouseMove = (e) => {\n    setSelectedStateId(getStateIdFromMouseEvent(e));\n  }\n\n  const onClick = (e) => {\n    jumpToState(getStateIdFromMouseEvent(e));\n  }\n\n  let selectedValue;\n\n  if (selectedStateId && graphData.find(d => d.stateId === selectedStateId)) {\n    selectedValue = graphData.find(d => d.stateId === selectedStateId).value\n  }\n\n  return <>\n    <GraphContainer width={width} height={height} onMouseMove={onMouseMove} onClick={onClick}>\n      <Line path={line(activeData)} stroke='#a6d2ff' />\n      <Line path={line(inactiveData)} stroke=\"#eee\" />\n      <Line path={selectionMarker} stroke='#ffcece' />\n\n    </GraphContainer>\n\n    { (selectedValue !== undefined) ? <CurrentValue>{selectedValue}</CurrentValue> : \"\" }\n  </>\n}\n\n\nexport default LineGraph;\n\n","import React, { useState, useEffect } from \"react\";\nimport styled from 'styled-components'\nimport * as d3 from 'd3';\nimport { clientPoint } from 'd3-selection';\nimport uniq from 'lodash/uniq'\nimport Line from './Line'\n\nconst GraphContainer = styled.svg`\n  border: solid thin #eee;\n  cursor: pointer;\n`\n\nconst CurrentValue = styled.div`\n  display: inline-block;\n  color: #aaa;\n`\n\nconst CategoryGraph = ({ data, width, height, selectedStateId, setSelectedStateId, jumpToState, currentStateId }) => {\n\n  const xScale = d3.scaleBand()\n                 .domain(data.map(d => d.stateId))\n                 .range([1, width - 1])\n                 .padding(0.1);\n\n  const yScale = d3.scaleBand()\n                .domain(uniq(data.map(d => d.value)))\n                .range([height - 1, 1])\n                .padding(0.1);\n\n  const activeColor = d3.scaleOrdinal()\n                .domain(uniq(data.map(d => d.value)))\n                .range(d3.schemePastel1)\n\n  const xPosToValue = (xPos) => {\n    const index = Math.round((xPos / xScale.step()));\n    const domain = xScale.domain();\n    if (index >= domain.length) {\n      return domain.slice(-1)[0];\n    } else if (index < 0) {\n      return domain[0];\n    } else {\n      return domain[index]\n    }\n  }\n\n  const selectionMarker = d3.line().curve(d3.curveLinear)([\n      [xScale(selectedStateId), yScale.range()[0]],\n      [xScale(selectedStateId), yScale.range()[1]],\n    ])\n\n  const bisect = d3.bisector(d => d.stateId).right;\n\n  const getStateIdFromMouseEvent = (e) => {\n    const [xPos, yPos] = d3.clientPoint(e.target, e);\n    return xPosToValue(xPos);\n  }\n\n  const onMouseMove = (e) => {\n    setSelectedStateId(getStateIdFromMouseEvent(e));\n  }\n\n  const onClick = (e) => {\n    jumpToState(getStateIdFromMouseEvent(e));\n  }\n\n  const rects = data.map(d => {\n    let color;\n    if (currentStateId >= d.stateId) {\n      color = activeColor(d.value);\n    } else {\n      color = \"#eee\";\n    }\n    return <rect\n      key={d.stateId}\n      fill={color}\n      x={xScale(d.stateId)}\n      y={yScale(d.value)}\n      height={yScale.bandwidth()}\n      width={xScale.bandwidth()}>\n    </rect>\n  })\n\n\n  let selectedValue;\n\n  if (selectedStateId && data.find(d => d.stateId === selectedStateId)) {\n    selectedValue = data.find(d => d.stateId === selectedStateId).value\n  }\n\n  return <>\n    <GraphContainer width={width} height={height} onMouseMove={onMouseMove} onClick={onClick}>\n      { rects }\n      <Line path={selectionMarker} stroke='#ffcece' />\n    </GraphContainer>\n    { selectedValue ? <CurrentValue>{selectedValue}</CurrentValue> : \"\" }\n  </>\n}\n\n\nexport default CategoryGraph;\n\n","import { createSelector } from 'reselect'\nimport { SHOW_ALL, SHOW_COMPLETED, SHOW_ACTIVE } from '../constants/TodoFilters'\n\nconst getVisibilityFilter = state => state.visibilityFilter\nconst getTodos = state => state.todos\n\nexport const getVisibleTodos = createSelector(\n  [getVisibilityFilter, getTodos],\n  (visibilityFilter, todos) => {\n    switch (visibilityFilter) {\n      case SHOW_ALL:\n        return todos\n      case SHOW_COMPLETED:\n        return todos.filter(t => t.completed)\n      case SHOW_ACTIVE:\n        return todos.filter(t => !t.completed)\n      default:\n        throw new Error('Unknown filter: ' + visibilityFilter)\n    }\n  }\n)\n\nexport const getCompletedTodoCount = createSelector(\n  [getTodos],\n  todos => (\n    todos.reduce((count, todo) =>\n      todo.completed ? count + 1 : count,\n      0\n    )\n  )\n)","export const SHOW_ALL = 'show_all'\nexport const SHOW_COMPLETED = 'show_completed'\nexport const SHOW_ACTIVE = 'show_active'\n","import React, { Component, PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { ActionCreators } from 'redux-devtools';\nimport styled from 'styled-components'\nimport ActionList from './ActionList'\nimport LineGraph from './LineGraph'\nimport CategoryGraph from './CategoryGraph'\nimport mapValues from 'lodash/mapValues'\nimport { getVisibleTodos, getCompletedTodoCount } from '../selectors'\n\nconst { reset, jumpToState } = ActionCreators;\n\nconst Panel = styled.div`\n  padding: 20px;\n  font-size: 14px;\n  font-weight: normal;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n`\nconst GraphLabel = styled.span`\n  font-family: Courier New,Courier,Lucida Sans Typewriter,Lucida Typewriter,monospace;\n  font-weight: 700;\n  margin-right: 10px;\n  display: inline-block;\n  width: 160px;\n`\n\nconst GraphColumn = styled.div`\n  display: inline-block;\n  width: 430px;\n`\n\nfunction reducer() {\n  return {};\n}\n\n// Todo: switch to functional component\nexport default class VisMonitor extends (PureComponent || Component) {\n  static update = reducer;\n\n  static propTypes = {\n    dispatch: PropTypes.func,\n    computedStates: PropTypes.array,\n    stagedActionIds: PropTypes.array,\n    actionsById: PropTypes.object,\n    currentStateIndex: PropTypes.number,\n    monitorState: PropTypes.shape({\n      initialScrollTop: PropTypes.number\n    }),\n    preserveScrollTop: PropTypes.bool,\n    stagedActions: PropTypes.array,\n    select: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    select: state => state,\n  };\n\n  state = {\n    selectedStateId: this.props.currentStateIndex\n  };\n\n  setSelectedStateId = (stateId) => this.setState({ selectedStateId: stateId })\n\n  render() {\n    const {\n      currentStateIndex, computedStates, actionsById, stagedActionIds, skippedActionIds, dispatch\n    } = this.props;\n\n    const todosLength = computedStates.map((state, index) => ({\n      stateId: index,\n      value: state.state.todos.length\n    }))\n\n    const visibleTodosLength = computedStates.map((state, index) => ({\n      stateId: index,\n      value: getVisibleTodos(state.state).length\n    }))\n\n    const completedTodosCount = computedStates.map((state, index) => ({\n      stateId: index,\n      value: getCompletedTodoCount(state.state)\n    }))\n\n    const visibilityFilter = computedStates.map((state, index) => ({\n      stateId: index,\n      value: state.state.visibilityFilter\n    }))\n\n    return (\n      <Panel>\n        <h3 style={{marginTop: 0}}>6.894 FP Prototype, Geoffrey Litt <a href=\"https://github.mit.edu/6894-sp20/FP-Program-Execution-Visualization/\"><span style={{fontWeight: \"normal\"}}>(project background / description)</span></a></h3>\n{/*\n        <div>\n          Try it out: 1) do some things in the app, 2) hover on graphs below to navigate past states, 3) click in a graph to rewind the app state to a past version.\n        </div>*/}\n\n        <div>Actions</div>\n\n        <ActionList\n          currentStateId={currentStateIndex}\n          stagedActionIds={stagedActionIds}\n          skippedActionIds={skippedActionIds}\n          actionsById={actionsById}\n          setSelectedStateId={this.setSelectedStateId}\n          selectedStateId={this.state.selectedStateId}\n          jumpToState={(stateId) => dispatch(jumpToState(stateId))}\n          />\n\n          <div>\n            <GraphLabel>state.todos.length</GraphLabel>\n\n            {/* todo: could dynamically define the state -> value function? */}\n            <LineGraph\n              data={todosLength}\n              currentStateId={currentStateIndex}\n              width={150}\n              height={35}\n              setSelectedStateId={this.setSelectedStateId}\n              selectedStateId={this.state.selectedStateId}\n              jumpToState={(stateId) => dispatch(jumpToState(stateId))}\n              />\n          </div>\n\n          <div>\n            <GraphLabel>visibleTodos.length</GraphLabel>\n\n            {/* todo: could dynamically define the state -> value function? */}\n            <LineGraph\n              data={visibleTodosLength}\n              currentStateId={currentStateIndex}\n              width={150}\n              height={35}\n              setSelectedStateId={this.setSelectedStateId}\n              selectedStateId={this.state.selectedStateId}\n              jumpToState={(stateId) => dispatch(jumpToState(stateId))}\n              />\n          </div>\n\n          <div>\n            <GraphLabel>completedTodosCount</GraphLabel>\n\n            {/* todo: could dynamically define the state -> value function? */}\n            <LineGraph\n              data={completedTodosCount}\n              currentStateId={currentStateIndex}\n              width={150}\n              height={35}\n              setSelectedStateId={this.setSelectedStateId}\n              selectedStateId={this.state.selectedStateId}\n              jumpToState={(stateId) => dispatch(jumpToState(stateId))}\n              />\n          </div>\n\n          <div>\n            <GraphLabel>visibilityFilter</GraphLabel>\n\n            {/* todo: could dynamically define the state -> value function? */}\n            <CategoryGraph\n              data={visibilityFilter}\n              currentStateId={currentStateIndex}\n              width={150}\n              height={35}\n              setSelectedStateId={this.setSelectedStateId}\n              selectedStateId={this.state.selectedStateId}\n              jumpToState={(stateId) => dispatch(jumpToState(stateId))}\n              />\n          </div>\n      </Panel>\n    );\n  }\n}\n","import React from 'react';\n\n// Exported from redux-devtools\nimport { createDevTools } from 'redux-devtools';\n\n// Monitors are separate packages, and you can make a custom one\nimport LogMonitor from 'redux-devtools-log-monitor';\nimport DockMonitor from 'redux-devtools-dock-monitor';\nimport SliderMonitor from 'redux-slider-monitor'\nimport VisMonitor from '../devtools/ReduxVisMonitor'\n\n// createDevTools takes a monitor and produces a DevTools component\nconst DevTools = createDevTools(\n  // Monitors are individually adjustable with props.\n  // Consult their repositories to learn about those props.\n  // Here, we put LogMonitor inside a DockMonitor.\n  // Note: DockMonitor is visible by default.\n  <DockMonitor\n    toggleVisibilityKey=\"ctrl-h\"\n    changePositionKey=\"ctrl-q\"\n    changeMonitorKey='ctrl-m'\n    defaultIsVisible={true}\n    defaultSize={0.3}\n  >\n    <VisMonitor />\n    <LogMonitor theme=\"tomorrow\" />\n    <SliderMonitor keyboardEnabled />\n  </DockMonitor>\n);\n\nexport default DevTools;\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\nexport default class TodoTextInput extends Component {\n  static propTypes = {\n    onSave: PropTypes.func.isRequired,\n    text: PropTypes.string,\n    placeholder: PropTypes.string,\n    editing: PropTypes.bool,\n    newTodo: PropTypes.bool\n  }\n\n  state = {\n    text: this.props.text || ''\n  }\n\n  handleSubmit = e => {\n    const text = e.target.value.trim()\n    if (e.which === 13) {\n      this.props.onSave(text)\n      if (this.props.newTodo) {\n        this.setState({ text: '' })\n      }\n    }\n  }\n\n  handleChange = e => {\n    this.setState({ text: e.target.value })\n  }\n\n  handleBlur = e => {\n    if (!this.props.newTodo) {\n      this.props.onSave(e.target.value)\n    }\n  }\n\n  render() {\n    return (\n      <input className={\n        classnames({\n          edit: this.props.editing,\n          'new-todo': this.props.newTodo\n        })}\n        type=\"text\"\n        placeholder={this.props.placeholder}\n        autoFocus={true}\n        value={this.state.text}\n        onBlur={this.handleBlur}\n        onChange={this.handleChange}\n        onKeyDown={this.handleSubmit} />\n    )\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport TodoTextInput from './TodoTextInput'\n\nconst Header = ({ addTodo }) => (\n  <header className=\"header\">\n    <h1>todos</h1>\n    <TodoTextInput\n      newTodo\n      onSave={(text) => {\n        if (text.length !== 0) {\n          addTodo(text)\n        }\n      }}\n      placeholder=\"What needs to be done?\"\n    />\n  </header>\n)\n\nHeader.propTypes = {\n  addTodo: PropTypes.func.isRequired\n}\n\nexport default Header\n","export const ADD_TODO = 'ADD_TODO'\nexport const DELETE_TODO = 'DELETE_TODO'\nexport const EDIT_TODO = 'EDIT_TODO'\nexport const COMPLETE_TODO = 'COMPLETE_TODO'\nexport const COMPLETE_ALL_TODOS = 'COMPLETE_ALL_TODOS'\nexport const CLEAR_COMPLETED = 'CLEAR_COMPLETED'\nexport const SET_VISIBILITY_FILTER = 'SET_VISIBILITY_FILTER'\n","import * as types from '../constants/ActionTypes'\n\nexport const addTodo = text => ({ type: types.ADD_TODO, text })\nexport const deleteTodo = id => ({ type: types.DELETE_TODO, id })\nexport const editTodo = (id, text) => ({ type: types.EDIT_TODO, id, text })\nexport const completeTodo = id => ({ type: types.COMPLETE_TODO, id })\nexport const completeAllTodos = () => ({ type: types.COMPLETE_ALL_TODOS })\nexport const clearCompleted = () => ({ type: types.CLEAR_COMPLETED })\nexport const setVisibilityFilter = filter => ({ type: types.SET_VISIBILITY_FILTER, filter})\n","import { connect } from 'react-redux'\nimport Header from '../components/Header'\nimport { addTodo } from '../actions'\n\nexport default connect(null, { addTodo })(Header)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\nconst Link = ({ active, children, setFilter }) =>\n  (\n    // eslint-disable-next-line jsx-a11y/anchor-is-valid\n    <a\n      className={classnames({ selected: active })}\n      style={{ cursor: 'pointer' }}\n      onClick={() => setFilter()}\n    >\n      {children}\n    </a>\n  )\n\n\nLink.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  setFilter: PropTypes.func.isRequired\n}\n\nexport default Link\n","import { connect } from 'react-redux'\nimport { setVisibilityFilter } from '../actions'\nimport Link from '../components/Link'\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.visibilityFilter\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  setFilter: () => {\n    dispatch(setVisibilityFilter(ownProps.filter))\n  }\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Link)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport FilterLink from '../containers/FilterLink'\nimport { SHOW_ALL, SHOW_COMPLETED, SHOW_ACTIVE } from '../constants/TodoFilters'\n\nconst FILTER_TITLES = {\n  [SHOW_ALL]: 'All',\n  [SHOW_ACTIVE]: 'Active',\n  [SHOW_COMPLETED]: 'Completed'\n}\n\nconst Footer = (props) => {\n  const { activeCount, completedCount, onClearCompleted } = props\n  const itemWord = activeCount === 1 ? 'item' : 'items'\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        <strong>{activeCount || 'No'}</strong> {itemWord} left\n      </span>\n      <ul className=\"filters\">\n        {Object.keys(FILTER_TITLES).map(filter =>\n          <li key={filter}>\n            <FilterLink filter={filter}>\n              {FILTER_TITLES[filter]}\n            </FilterLink>\n          </li>\n        )}\n      </ul>\n      {\n        !!completedCount &&\n        <button\n          className=\"clear-completed\"\n          onClick={onClearCompleted}\n        >Clear completed</button>\n        \n      }\n    </footer>\n  )\n}\n\nFooter.propTypes = {\n  completedCount: PropTypes.number.isRequired,\n  activeCount: PropTypes.number.isRequired,\n  onClearCompleted: PropTypes.func.isRequired,\n}\n\nexport default Footer\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport TodoTextInput from './TodoTextInput'\n\nexport default class TodoItem extends Component {\n  static propTypes = {\n    todo: PropTypes.object.isRequired,\n    editTodo: PropTypes.func.isRequired,\n    deleteTodo: PropTypes.func.isRequired,\n    completeTodo: PropTypes.func.isRequired\n  }\n\n  state = {\n    editing: false\n  }\n\n  handleDoubleClick = () => {\n    this.setState({ editing: true })\n  }\n\n  handleSave = (id, text) => {\n    if (text.length === 0) {\n      this.props.deleteTodo(id)\n    } else {\n      this.props.editTodo(id, text)\n    }\n    this.setState({ editing: false })\n  }\n\n  render() {\n    const { todo, completeTodo, deleteTodo } = this.props\n\n    let element\n    if (this.state.editing) {\n      element = (\n        <TodoTextInput text={todo.text}\n                       editing={this.state.editing}\n                       onSave={(text) => this.handleSave(todo.id, text)} />\n      )\n    } else {\n      element = (\n        <div className=\"view\">\n          <input className=\"toggle\"\n                 type=\"checkbox\"\n                 checked={todo.completed}\n                 onChange={() => completeTodo(todo.id)} />\n          <label onDoubleClick={this.handleDoubleClick}>\n            {todo.text}\n          </label>\n          <button className=\"destroy\"\n                  onClick={() => deleteTodo(todo.id)} />\n        </div>\n      )\n    }\n\n    return (\n      <li className={classnames({\n        completed: todo.completed,\n        editing: this.state.editing\n      })}>\n        {element}\n      </li>\n    )\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport TodoItem from './TodoItem'\n\nconst TodoList = ({ filteredTodos, actions }) => (\n  <ul className=\"todo-list\">\n    {filteredTodos.map(todo =>\n      <TodoItem key={todo.id} todo={todo} {...actions} />\n    )}\n  </ul>\n)\n\nTodoList.propTypes = {\n  filteredTodos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    completed: PropTypes.bool.isRequired,\n    text: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n  actions: PropTypes.object.isRequired\n}\n\nexport default TodoList\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as TodoActions from '../actions'\nimport TodoList from '../components/TodoList'\nimport { getVisibleTodos } from '../selectors'\n\nconst mapStateToProps = state => ({\n  filteredTodos: getVisibleTodos(state)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(TodoActions, dispatch)\n})\n\n\nconst VisibleTodoList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoList)\n\nexport default VisibleTodoList\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Footer from './Footer'\nimport VisibleTodoList from '../containers/VisibleTodoList'\n\nconst MainSection = ({ todosCount, completedCount, actions }) =>\n  (\n    <section className=\"main\">\n      {\n        !!todosCount && \n        <span>\n          <input\n            className=\"toggle-all\"\n            type=\"checkbox\"\n            checked={completedCount === todosCount}\n            readOnly\n          />\n          <label onClick={actions.completeAllTodos}/>\n        </span>\n      }\n      <VisibleTodoList />\n      {\n        !!todosCount &&\n        <Footer\n          completedCount={completedCount}\n          activeCount={todosCount - completedCount}\n          onClearCompleted={actions.clearCompleted}\n        />\n      }\n    </section>\n  )\n\nMainSection.propTypes = {\n  todosCount: PropTypes.number.isRequired,\n  completedCount: PropTypes.number.isRequired,\n  actions: PropTypes.object.isRequired\n}\n\nexport default MainSection;","import { connect } from 'react-redux'\nimport * as TodoActions from '../actions'\nimport { bindActionCreators } from 'redux'\nimport MainSection from '../components/MainSection'\nimport { getCompletedTodoCount } from '../selectors'\n\n\nconst mapStateToProps = state => ({\n  todosCount: state.todos.length,\n  completedCount: getCompletedTodoCount(state)\n})\n\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(TodoActions, dispatch)\n})\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MainSection)\n\n","import React from 'react'\nimport Header from '../containers/Header'\nimport MainSection from '../containers/MainSection'\nimport DevTools from '../containers/DevTools'\n\nconst App = () => (\n  <div>\n    <Header />\n    <MainSection />\n  </div>\n)\n\nexport default App\n","import {\n  ADD_TODO,\n  DELETE_TODO,\n  EDIT_TODO,\n  COMPLETE_TODO,\n  COMPLETE_ALL_TODOS,\n  CLEAR_COMPLETED\n} from '../constants/ActionTypes'\n\nconst initialState = [\n  {\n    text: 'Use Redux',\n    completed: false,\n    id: 0\n  }\n]\n\nexport default function todos(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TODO:\n      return [\n        ...state,\n        {\n          id: state.reduce((maxId, todo) => Math.max(todo.id, maxId), -1) + 1,\n          completed: false,\n          text: action.text\n        }\n      ]\n\n    case DELETE_TODO:\n      return state.filter(todo =>\n        todo.id !== action.id\n      )\n\n    case EDIT_TODO:\n      return state.map(todo =>\n        todo.id === action.id ?\n          { ...todo, text: action.text } :\n          todo\n      )\n\n    case COMPLETE_TODO:\n      return state.map(todo =>\n        todo.id === action.id ?\n          { ...todo, completed: !todo.completed } :\n          todo\n      )\n\n    case COMPLETE_ALL_TODOS:\n      const areAllMarked = state.every(todo => todo.completed)\n      return state.map(todo => ({\n        ...todo,\n        completed: !areAllMarked\n      }))\n\n    case CLEAR_COMPLETED:\n      return state.filter(todo => todo.completed === false)\n\n    default:\n      return state\n  }\n}\n","import { SET_VISIBILITY_FILTER } from '../constants/ActionTypes'\nimport { SHOW_ALL } from '../constants/TodoFilters'\n\nconst visibilityFilter = (state = SHOW_ALL, action) => {\n  switch (action.type) {\n    case SET_VISIBILITY_FILTER:\n      return action.filter\n    default:\n      return state\n  }\n}\n\nexport default visibilityFilter","import { combineReducers } from 'redux'\nimport todos from './todos'\nimport visibilityFilter from './visibilityFilter'\n\nconst rootReducer = combineReducers({\n  todos,\n  visibilityFilter\n})\n\nexport default rootReducer\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport DevTools from './containers/DevTools'\nimport App from './components/App'\nimport reducer from './reducers'\nimport 'todomvc-app-css/index.css'\n\nconst store = createStore(reducer,\n  // stock redux devtools\n  // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n\n  // our custom devtools\n  DevTools.instrument()\n)\n\nrender(\n  <Provider store={store}>\n    <>\n      <App />\n      <DevTools />\n    </>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}