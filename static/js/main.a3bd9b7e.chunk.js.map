{"version":3,"sources":["devtools/Line.jsx","devtools/GraphContainer.jsx","devtools/LineGraph.jsx","devtools/ActionsGraph.jsx","devtools/CategoryGraph.jsx","devtools/CollectionGraph.jsx","selectors/index.js","constants/TodoFilters.js","devtools/ReduxVisMonitor.jsx","containers/DevTools.js","components/TodoTextInput.js","components/Header.js","constants/ActionTypes.js","actions/index.js","containers/Header.js","components/Link.js","containers/FilterLink.js","components/Footer.js","components/TodoItem.js","components/TodoList.js","containers/VisibleTodoList.js","components/MainSection.js","containers/MainSection.js","components/App.js","reducers/todos.js","reducers/visibilityFilter.js","reducers/index.js","index.js"],"names":["Line","_ref","path","stroke","fill","strokeWidth","strokeDasharray","react_default","a","createElement","d","opacity","defaultProps","GraphContainer","styled","svg","_templateObject","LineGraph","currentValue","valueOverlay","data","width","height","setSelectedStateId","selectedStateId","jumpToState","currentStateId","resetToSelectedState","lastDataPoint","slice","graphData","concat","stateId","value","xScale","d3","domain","range","yScale","line","defined","isNaN","curve","x","y","currentStateMarker","selectedStateMarker","bisect","right","getStateIdFromMouseEvent","e","_d3$clientPoint","target","_d3$clientPoint2","Object","slicedToArray","xPos","yPos","position","invert","find","undefined","fontSize","Fragment","devtools_GraphContainer","onMouseMove","onClick","clickedStateId","onMouseLeave","devtools_Line","ActionsGraph","selectionPin","map","padding","uniq","index","Math","round","step","length","xPosToValue","icons","key","bandwidth","@@INIT","ADD_TODO","SET_VISIBILITY_FILTER","EDIT_TODO","DELETE_TODO","COMPLETE_TODO","COMPLETE_ALL_TODOS","CLEAR_COMPLETED","CategoryGraph","color","rects","CollectionGraph","dots","flatMap","todo","column","floor","row","circleColor","completed","id","Color","desaturate","darken","cx","cy","r","getTodos","state","todos","getVisibleTodos","createSelector","visibilityFilter","filter","t","Error","getCompletedTodoCount","reduce","count","ActionCreators","reset","Panel","div","ReduxVisMonitor_templateObject","GraphLabel","_templateObject2","Instructions","_templateObject3","_templateObject4","Visualizations","_templateObject5","State","_templateObject6","PanelColumnLabel","_templateObject7","VisMonitor","_this2","this","_this$props","props","currentStateIndex","computedStates","actionsById","stagedActionIds","dispatch","skippedActionIds","currentState","stagedActions","completedTodosCount","visibleTodos","enumValues","actionsForGraph","action","type","stateIndexToJump","setState","style","marginTop","href","devtools_ActionsGraph","devtools_CollectionGraph","devtools_LineGraph","devtools_CategoryGraph","react_json_tree_lib_default","theme","PureComponent","Component","update","propTypes","PropTypes","func","array","object","number","monitorState","shape","initialScrollTop","preserveScrollTop","bool","select","isRequired","DevTools","createDevTools","redux_devtools_dock_monitor_lib_default","toggleVisibilityKey","changePositionKey","changeMonitorKey","defaultIsVisible","defaultSize","defaultPosition","ReduxVisMonitor_VisMonitor","redux_devtools_log_monitor_lib_default","SliderMonitor_default","keyboardEnabled","TodoTextInput","text","_this","handleSubmit","trim","which","onSave","newTodo","handleChange","handleBlur","className","classnames","edit","editing","new-todo","placeholder","autoFocus","onBlur","onChange","onKeyDown","Header","addTodo","TodoTextInput_TodoTextInput","types","deleteTodo","editTodo","completeTodo","completeAllTodos","clearCompleted","setVisibilityFilter","connect","Link","active","children","setFilter","selected","cursor","ownProps","FILTER_TITLES","_FILTER_TITLES","defineProperty","Footer","activeCount","completedCount","onClearCompleted","itemWord","keys","FilterLink","TodoItem","handleDoubleClick","handleSave","element","checked","onDoubleClick","TodoList","filteredTodos","actions","TodoItem_TodoItem","assign","VisibleTodoList","bindActionCreators","TodoActions","MainSection","todosCount","readOnly","containers_VisibleTodoList","components_Footer","App","containers_Header","containers_MainSection","initialState","arguments","rootReducer","combineReducers","toConsumableArray","maxId","max","objectSpread","areAllMarked","every","store","createStore","reducer","instrument","render","es","components_App","containers_DevTools","document","getElementById"],"mappings":"2oBAEMA,EAAO,SAAAC,GAA0D,IAAvDC,EAAuDD,EAAvDC,KAAMC,EAAiDF,EAAjDE,OAAQC,EAAyCH,EAAzCG,KAAMC,EAAmCJ,EAAnCI,YAAaC,EAAsBL,EAAtBK,gBAC/C,OAAOC,EAAAC,EAAAC,cAAA,QACLC,EAAGR,EACHE,KAAMA,EACND,OAAQA,EACRE,YAAaA,EACbC,gBAAiBA,EACjBK,QAAS,MAIbX,EAAKY,aAAe,CAClBT,OAAc,OACdC,KAAc,OACdC,YAAc,GAGDL,qJCjBf,IAMea,EANQC,IAAOC,IAAVC,KCyGLC,EApGG,SAAAhB,GAAqH,IAkEjIiB,EAMAC,EAxEeC,EAAkHnB,EAAlHmB,KAAMC,EAA4GpB,EAA5GoB,MAAOC,EAAqGrB,EAArGqB,OAAQC,EAA6FtB,EAA7FsB,mBAAoBC,EAAyEvB,EAAzEuB,gBAAiBC,EAAwDxB,EAAxDwB,YAAaC,EAA2CzB,EAA3CyB,eAAgBC,EAA2B1B,EAA3B0B,qBAGpGC,EAAgBR,EAAKS,OAAO,GAAG,GACjCC,EAAYV,EAAKW,OAAO,CAAC,CAAEC,QAASJ,EAAcI,QAAU,EAAGC,MAAOL,EAAcK,SAElFC,EAASC,MACCC,OAAOD,IAAUL,EAAW,SAAApB,GAAC,OAAIA,EAAEsB,WACnCK,MAAM,CAAC,EAAGhB,EAAQ,IAE5BiB,EAASH,MACCC,OAAOD,IAAUL,EAAW,SAAApB,GAAC,OAAIA,EAAEuB,SACnCI,MAAM,CAACf,EAAS,EAAG,IAE7BiB,EAAOJ,MACRK,QAAQ,SAAA9B,GAAC,OAAK+B,MAAM/B,EAAEuB,SACtBS,MAAMP,KACNQ,EAAE,SAACjC,GAAQ,OAAOwB,EAAOxB,EAAEsB,WAC3BY,EAAE,SAAClC,GAAQ,OAAO4B,EAAO5B,EAAEuB,SAE1BY,EAAqBV,MAAUO,MAAMP,IAAhBA,CAAgC,CACvD,CAACD,EAAOR,GAAiBY,EAAOD,QAAQ,IACxC,CAACH,EAAOR,GAAiBY,EAAOD,QAAQ,MAGtCS,EAAsBX,MAAUO,MAAMP,IAAhBA,CAAgC,CACxD,CAACD,EAAOV,GAAkBc,EAAOD,QAAQ,IACzC,CAACH,EAAOV,GAAkBc,EAAOD,QAAQ,MAGvCU,EAASZ,IAAY,SAAAzB,GAAC,OAAIA,EAAEsB,UAASgB,MAErCC,EAA2B,SAACC,GAAM,IAAAC,EACjBhB,IAAee,EAAEE,OAAQF,GADRG,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC/BK,EAD+BH,EAAA,GACzBI,EADyBJ,EAAA,GAEhCK,EAAW,CACff,EAAGT,EAAOyB,OAAOH,GACjBZ,EAAGN,EAAOqB,OAAOF,IAEbzB,EAAUe,EAAOjB,EAAW4B,EAASf,EAAG,GAG9C,OAAIX,GAAWJ,EAAcI,QACpBA,EAEAJ,EAAcI,SAyCzB,OAjBIN,GAAkBN,EAAKwC,KAAK,SAAAlD,GAAC,OAAIA,EAAEsB,UAAYN,MACjDR,EAAeE,EAAKwC,KAAK,SAAAlD,GAAC,OAAIA,EAAEsB,UAAYN,IAAgBO,YAIzC4B,IAAjB3C,IACFC,EAAeZ,EAAAC,EAAAC,cAAA,QACTkC,EAAGT,EAAOR,GAAkB,EAC5BkB,EAAG,GACHtB,OAAQ,GACRD,MAAO,GACPjB,KAAK,OACL0D,SAAS,QACR5C,IAIFX,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuD,SAAA,KACLxD,EAAAC,EAAAC,cAACuD,EAAD,CAAgB3C,MAAOA,EAAOC,OAAQA,EAAQ2C,YA5B5B,SAACf,GACnBzB,EAAYwB,EAAyBC,KA2BmCgB,QAtC1D,SAAChB,GACf,IAAMiB,EAAiBlB,EAAyBC,GAG9C3B,EAFE4C,IAAmB3C,EAEF,KAEA2C,IAgCqEC,aAxBvE,SAAClB,GACpBvB,MAwBEpB,EAAAC,EAAAC,cAAC4D,EAAD,CAAMnE,KAAMqC,EAAKT,GAAY3B,OAAO,YACpCI,EAAAC,EAAAC,cAAC4D,EAAD,CAAMnE,KAAM2C,EAAoB1C,OAAO,OAAOG,gBAAiB,EAAGD,YAAa,IAC7EmB,EAAkBjB,EAAAC,EAAAC,cAAC4D,EAAD,CAAMnE,KAAM4C,EAAqB3C,OAAO,YAAe,KAE1EgB,sBCuCQmD,EAlHM,SAAArE,GAAqH,IA4EpIiB,EAMAC,EAaAoD,EA/FkBnD,EAAkHnB,EAAlHmB,KAAMC,EAA4GpB,EAA5GoB,MAAOC,EAAqGrB,EAArGqB,OAAQC,EAA6FtB,EAA7FsB,mBAAoBE,EAAyExB,EAAzEwB,YAAaC,EAA4DzB,EAA5DyB,eAAgBC,EAA4C1B,EAA5C0B,qBAAsBH,EAAsBvB,EAAtBuB,gBAE5GU,EAASC,MACCC,OAAOhB,EAAKoD,IAAI,SAAA9D,GAAC,OAAIA,EAAEsB,WACvBK,MAAM,CAAC,EAAGhB,EAAQ,IAClBoD,QAAQ,IAElBnC,EAASH,MACAC,OAAOsC,IAAKtD,EAAKoD,IAAI,SAAA9D,GAAC,OAAIA,EAAEuB,UAC5BI,MAAM,CAACf,EAAS,EAAG,IACnBmD,QAAQ,IAkBjB5B,GAhBcV,MACLC,OAAOsC,IAAKtD,EAAKoD,IAAI,SAAA9D,GAAC,OAAIA,EAAEuB,UAC5BI,MAAMF,KAcMA,MAAUO,MAAMP,IAAhBA,CAAgC,CACvD,CAACD,EAAOR,GAAiBY,EAAOD,QAAQ,IACxC,CAACH,EAAOR,GAAiBY,EAAOD,QAAQ,OAGtCS,EAAsBX,MAAUO,MAAMP,IAAhBA,CAAgC,CACxD,CAACD,EAAOV,GAAkBc,EAAOD,QAAQ,IACzC,CAACH,EAAOV,GAAkBc,EAAOD,QAAQ,MAMvCY,GAFSd,IAAY,SAAAzB,GAAC,OAAIA,EAAEsB,UAASgB,MAEV,SAACE,GAAM,IAAAC,EACjBhB,IAAee,EAAEE,OAAQF,GADRG,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC/BK,EAD+BH,EAAA,GAEtC,OAFsCA,EAAA,GAzBpB,SAACG,GACnB,IAAMmB,EAAQC,KAAKC,MAAOrB,EAAOtB,EAAO4C,QAClC1C,EAASF,EAAOE,SACtB,OAAIuC,GAASvC,EAAO2C,OACX3C,EAAOP,OAAO,GAAG,GACf8C,EAAQ,EACVvC,EAAO,GAEPA,EAAOuC,GAmBTK,CAAYxB,KAqBfyB,EAAQ7D,EAAKoD,IAAI,SAAA9D,GAAC,OACtBH,EAAAC,EAAAC,cAAA,QACEyE,IAAKxE,EAAEsB,QACPW,EAAGT,EAAOxB,EAAEsB,SAAW,EACvBY,EAAG,GACHtB,OAAQ,GACRD,MAAOa,EAAOiD,aApFF,CACdC,SAAU,SACVC,SAAY,SACZC,sBAAyB,eACzBC,UAAa,eACbC,YAAe,eACfC,cAAiB,SACjBC,mBAAsB,SACtBC,gBAAmB,gBA6EGjF,EAAEuB,QA1EI,OAyG9B,OAxBIP,GAAkBN,EAAKwC,KAAK,SAAAlD,GAAC,OAAIA,EAAEsB,UAAYN,MACjDR,EAAeE,EAAKwC,KAAK,SAAAlD,GAAC,OAAIA,EAAEsB,UAAYN,IAAgBO,YAIzC4B,IAAjB3C,IACFC,EAAeZ,EAAAC,EAAAC,cAAA,QACbkC,EAAGT,EAAOR,GAAkB,EAC5BkB,EAAG,GACHtB,OAAQ,GACRD,MAAO,GACPjB,KAAK,OACL0D,SAAS,QACR5C,IAKDM,IACF+C,EAAehE,EAAAC,EAAAC,cAAA,QACbkC,EAAGT,EAAOV,GACVoB,GAAI,GAFS,iBAKVrC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuD,SAAA,KACLxD,EAAAC,EAAAC,cAACuD,EAAD,CAAgB3C,MAAOA,EAAOC,OAAQA,EAAQ2C,YA/C5B,SAACf,GACnBzB,EAAYwB,EAAyBC,KA8CmCgB,QAzD1D,SAAChB,GACf,IAAMiB,EAAiBlB,EAAyBC,GAG9C3B,EAFE4C,IAAmB3C,EAEF,KAEA2C,IAmDqEC,aA3CvE,SAAClB,GACpBvB,MA2CIsD,EACF1E,EAAAC,EAAAC,cAAC4D,EAAD,CAAMnE,KAAM2C,EAAoB1C,OAAO,OAAOG,gBAAiB,EAAGD,YAAa,IAC7EmB,EAAkBjB,EAAAC,EAAAC,cAAC4D,EAAD,CAAMnE,KAAM4C,EAAqB3C,OAAO,YAAe,KAC1EoE,EACApD,KChBQyE,EA3GO,SAAA3F,GAAqH,IA6ErIiB,EAMAC,EAnFmBC,EAAkHnB,EAAlHmB,KAAMC,EAA4GpB,EAA5GoB,MAAOC,EAAqGrB,EAArGqB,OAAQC,EAA6FtB,EAA7FsB,mBAAoBC,EAAyEvB,EAAzEuB,gBAAiBC,EAAwDxB,EAAxDwB,YAAaC,EAA2CzB,EAA3CyB,eAAgBC,EAA2B1B,EAA3B0B,qBAIxGO,EAASC,MACCC,OAAOhB,EAAKoD,IAAI,SAAA9D,GAAC,OAAIA,EAAEsB,WACvBK,MAAM,CAAC,EAAGhB,EAAQ,IAClBoD,QAAQ,IAElBnC,EAASH,MACAC,OAAOhB,EAAK,GAAL,YACPiB,MAAM,CAACf,EAAS,EAAG,IACnBmD,QAAQ,IAEjBoB,EAAQ1D,MACCC,OAAOsC,IAAKtD,EAAKoD,IAAI,SAAA9D,GAAC,OAAIA,EAAEuB,UAC5BI,MAAMF,KAcfU,EAAqBV,MAAUO,MAAMP,IAAhBA,CAAgC,CACvD,CAACD,EAAOR,GAAiBY,EAAOD,QAAQ,IACxC,CAACH,EAAOR,GAAiBY,EAAOD,QAAQ,MAGtCS,EAAsBX,MAAUO,MAAMP,IAAhBA,CAAgC,CACxD,CAACD,EAAOV,GAAkBc,EAAOD,QAAQ,IACzC,CAACH,EAAOV,GAAkBc,EAAOD,QAAQ,MAKvCY,GAFSd,IAAY,SAAAzB,GAAC,OAAIA,EAAEsB,UAASgB,MAEV,SAACE,GAAM,IAAAC,EACjBhB,IAAee,EAAEE,OAAQF,GADRG,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC/BK,EAD+BH,EAAA,GAEtC,OAFsCA,EAAA,GAxBpB,SAACG,GACnB,IAAMmB,EAAQC,KAAKC,MAAOrB,EAAOtB,EAAO4C,QAClC1C,EAASF,EAAOE,SACtB,OAAIuC,GAASvC,EAAO2C,OACX3C,EAAOP,OAAO,GAAG,GACf8C,EAAQ,EACVvC,EAAO,GAEPA,EAAOuC,GAkBTK,CAAYxB,KAqBfsC,EAAQ1E,EAAKoD,IAAI,SAAA9D,GACrB,OAAOH,EAAAC,EAAAC,cAAA,QACLyE,IAAKxE,EAAEsB,QACP5B,KAAMyF,EAAMnF,EAAEuB,OACdU,EAAGT,EAAOxB,EAAEsB,SACZY,EAAGN,EAAO5B,EAAEuB,OACZX,OAAQgB,EAAO6C,YACf9D,MAAOa,EAAOiD,gBAwBlB,OAjBIzD,GAAkBN,EAAKwC,KAAK,SAAAlD,GAAC,OAAIA,EAAEsB,UAAYN,MACjDR,EAAeE,EAAKwC,KAAK,SAAAlD,GAAC,OAAIA,EAAEsB,UAAYN,IAAgBO,YAIzC4B,IAAjB3C,IACFC,EAAeZ,EAAAC,EAAAC,cAAA,QACTkC,EAAGT,EAAOR,GAAkB,EAC5BkB,EAAG,GACHtB,OAAQ,GACRD,MAAO,GACPjB,KAAK,OACL0D,SAAS,QACR5C,IAIFX,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuD,SAAA,KACLxD,EAAAC,EAAAC,cAACuD,EAAD,CAAgB3C,MAAOA,EAAOC,OAAQA,EAAQ2C,YAxC5B,SAACf,GACnBzB,EAAYwB,EAAyBC,KAuCmCgB,QAlD1D,SAAChB,GACf,IAAMiB,EAAiBlB,EAAyBC,GAG9C3B,EAFE4C,IAAmB3C,EAEF,KAEA2C,IA4CqEC,aApCvE,SAAClB,GACpBvB,MAoCImE,EACFvF,EAAAC,EAAAC,cAAC4D,EAAD,CAAMnE,KAAM2C,EAAoB1C,OAAO,OAAOG,gBAAiB,EAAGD,YAAa,IAC7EmB,EAAkBjB,EAAAC,EAAAC,cAAC4D,EAAD,CAAMnE,KAAM4C,EAAqB3C,OAAO,YAAe,KAC1EgB,uBCpGD0E,EAAQ1D,MACCC,OAAO,IACPC,MAAM,CAAC,UAAW,YA+GlB0D,EA7GS,SAAA9F,GAAqH,IA+EvIiB,EAMAC,EArFqBC,EAAkHnB,EAAlHmB,KAAMC,EAA4GpB,EAA5GoB,MAAOC,EAAqGrB,EAArGqB,OAAQC,EAA6FtB,EAA7FsB,mBAAoBC,EAAyEvB,EAAzEuB,gBAAiBC,EAAwDxB,EAAxDwB,YAAaC,EAA2CzB,EAA3CyB,eAAgBC,EAA2B1B,EAA3B0B,qBAE1GO,EAASC,MACCC,OAAOhB,EAAKoD,IAAI,SAAA9D,GAAC,OAAIA,EAAEsB,WACvBK,MAAM,CAAC,EAAGhB,EAAQ,IAClBoD,QAAQ,IAElBnC,EAASH,MACAC,OAAO,IACPC,MAAM,CAACf,EAAS,EAAG,IACnBmD,QAAQ,IAcjB5B,EAAqBV,MAAUO,MAAMP,IAAhBA,CAAgC,CACvD,CAACD,EAAOR,GAAiBJ,EAAS,GAClC,CAACY,EAAOR,GAAiBY,EAAOD,QAAQ,MAGtCS,EAAsBX,MAAUO,MAAMP,IAAhBA,CAAgC,CACxD,CAACD,EAAOV,GAAkBc,EAAOD,QAAQ,IACzC,CAACH,EAAOV,GAAkBc,EAAOD,QAAQ,MAMvCY,GAFSd,IAAY,SAAAzB,GAAC,OAAIA,EAAEsB,UAASgB,MAEV,SAACE,GAAM,IAAAC,EACjBhB,IAAee,EAAEE,OAAQF,GADRG,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC/BK,EAD+BH,EAAA,GAEtC,OAFsCA,EAAA,GAzBpB,SAACG,GACnB,IAAMmB,EAAQC,KAAKC,MAAOrB,EAAOtB,EAAO4C,QAClC1C,EAASF,EAAOE,SACtB,OAAIuC,GAASvC,EAAO2C,OACX3C,EAAOP,OAAO,GAAG,GACf8C,EAAQ,EACVvC,EAAO,GAEPA,EAAOuC,GAmBTK,CAAYxB,KAqBfwC,EAAO5E,EAAK6E,QAAQ,SAAAvF,GACxB,OAAOA,EAAEuB,MAAMuC,IAAI,SAAC0B,EAAMvB,GACxB,IAAMwB,EAASvB,KAAKwB,MAAMzB,EAAQ,GAC5B0B,EAAM1B,EAAQ,EACd2B,EAAcT,EAAMK,EAAKK,WAE/B,OAAOhG,EAAAC,EAAAC,cAAA,UACLyE,IAAG,GAAAnD,OAAKrB,EAAEsB,QAAP,KAAAD,OAAkBmE,EAAKM,IAC1BpG,KAAMkG,EACNnG,OAAQsG,IAAMH,GAAaI,WAAW,IAAKC,OAAO,IAClDtG,YAAa,EACbuG,GAAI1E,EAAOxB,EAAEsB,SAAqB,EAATmE,EACzBU,GAAI,EAAW,EAANR,EAAqB,EAATF,EACrBW,EAAG,QAyBT,OAjBIpF,GAAkBN,EAAKwC,KAAK,SAAAlD,GAAC,OAAIA,EAAEsB,UAAYN,MACjDR,EAAeE,EAAKwC,KAAK,SAAAlD,GAAC,OAAIA,EAAEsB,UAAYN,IAAgBO,YAIzC4B,IAAjB3C,IACFC,EAAeZ,EAAAC,EAAAC,cAAA,QACTkC,EAAGT,EAAOR,GAAkB,EAC5BkB,EAAG,GACHtB,OAAQ,GACRD,MAAO,GACPjB,KAAK,OACL0D,SAAS,QACR5C,EAAa6D,OAPL,WAWVxE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuD,SAAA,KACLxD,EAAAC,EAAAC,cAACuD,EAAD,CAAgB3C,MAAOA,EAAOC,OAAQA,EAAQ2C,YA/C5B,SAACf,GACnBzB,EAAYwB,EAAyBC,KA8CmCgB,QAzD1D,SAAChB,GACf,IAAMiB,EAAiBlB,EAAyBC,GAG9C3B,EAFE4C,IAAmB3C,EAEF,KAEA2C,IAmDqEC,aA3CvE,SAAClB,GACpBvB,MA2CIqE,EACFzF,EAAAC,EAAAC,cAAC4D,EAAD,CAAMnE,KAAM2C,EAAoB1C,OAAO,OAAOG,gBAAiB,EAAGD,YAAa,IAC7EmB,EAAkBjB,EAAAC,EAAAC,cAAC4D,EAAD,CAAMnE,KAAM4C,EAAqB3C,OAAO,YAAe,KAC1EgB,uBChHD4F,EAAW,SAAAC,GAAK,OAAIA,EAAMC,OAEnBC,EAAkBC,YAC7B,CAJ0B,SAAAH,GAAK,OAAIA,EAAMI,kBAInBL,GACtB,SAACK,EAAkBH,GACjB,OAAQG,GACN,ICVkB,WDWhB,OAAOH,EACT,ICXwB,iBDYtB,OAAOA,EAAMI,OAAO,SAAAC,GAAC,OAAIA,EAAEf,YAC7B,ICZqB,cDanB,OAAOU,EAAMI,OAAO,SAAAC,GAAC,OAAKA,EAAEf,YAC9B,QACE,MAAM,IAAIgB,MAAM,mBAAqBH,MAKhCI,EAAwBL,YACnC,CAACJ,GACD,SAAAE,GAAK,OACHA,EAAMQ,OAAO,SAACC,EAAOxB,GAAR,OACXA,EAAKK,UAAYmB,EAAQ,EAAIA,GAC7B,0xCEdyBC,iBAAvBC,UAAOnG,EAAgBkG,iBAAhBlG,YAEToG,GAAQ/G,IAAOgH,IAAVC,KAaLC,GAAalH,IAAOgH,IAAVG,KAgBVC,IALcpH,IAAOgH,IAAVK,KAKIrH,IAAOgH,IAAVM,MAIZC,GAAiBvH,IAAOgH,IAAVQ,KAKdC,GAAQzH,IAAOgH,IAAVU,KAILC,GAAmB3H,IAAOgH,IAAVY,SAYDC,8MAqBnB3B,MAAQ,CAENxF,gBAAiB,8EAGV,IAAAoH,EAAAC,KAAAC,EAGHD,KAAKE,MADPC,EAFKF,EAELE,kBAAmBC,EAFdH,EAEcG,eAAgBC,EAF9BJ,EAE8BI,YAAaC,EAF3CL,EAE2CK,gBAAmCC,GAF9EN,EAE4DO,iBAF5DP,EAE8EM,UAS/EE,GAXCR,EAEwFS,cAS1EN,EAAeD,GAAmBhC,OAYjDwC,GAVcP,EAAezE,IAAI,SAACwC,EAAOrC,GAAR,MAAmB,CACxD3C,QAAS2C,EACT1C,MAAO+E,EAAMA,MAAMC,MAAMlC,UAGAkE,EAAezE,IAAI,SAACwC,EAAOrC,GAAR,MAAmB,CAC/D3C,QAAS2C,EACT1C,MAAOiF,EAAgBF,EAAMA,OAAOjC,UAGVkE,EAAezE,IAAI,SAACwC,EAAOrC,GAAR,MAAmB,CAChE3C,QAAS2C,EACT1C,MAAOuF,EAAsBR,EAAMA,WAG/BC,EAAQgC,EAAezE,IAAI,SAACwC,EAAOrC,GAAR,MAAmB,CAClD3C,QAAS2C,EACT1C,MAAO+E,EAAMA,MAAMC,SAGfwC,EAAeR,EAAezE,IAAI,SAACwC,EAAOrC,GAAR,MAAmB,CACzD3C,QAAS2C,EACT1C,MAAOiF,EAAgBF,EAAMA,UAGzBI,EAAmB6B,EAAezE,IAAI,SAACwC,EAAOrC,GAAR,MAAmB,CAC7D3C,QAAS2C,EACT1C,MAAO+E,EAAMA,MAAMI,iBACnBsC,WAAY,CDxIM,WACM,iBACH,kBC6IjBC,EAAkBR,EAAgB3E,IAAI,SAAAgC,GAAE,MAAK,CACjDxE,QAASwE,EACTvE,MAAOiH,EAAY1C,GAAIoD,OAAOC,QAG1BlI,EAAuB,WAC3B,IAAImI,EAGFA,EADiC,OAA/BlB,EAAK5B,MAAMxF,gBACMyH,EAAelE,OAAS,EAExB6D,EAAK5B,MAAMxF,gBAGhC4H,EAAS3H,EAAYqI,KAGjBvI,EAAqB,SAACS,GACtBA,IAAYiH,EAAelE,OAAS,EACtC6D,EAAKmB,SAAS,CAAEvI,gBAAiBQ,IAEjC4G,EAAKmB,SAAS,CAAEvI,gBAAiB,QAQrC,OACEjB,EAAAC,EAAAC,cAACoH,GAAD,KACEtH,EAAAC,EAAAC,cAACyH,GAAD,KACE3H,EAAAC,EAAAC,cAAA,MAAIuJ,MAAO,CAACC,UAAW,IAAvB,kBAEA1J,EAAAC,EAAAC,cAAA,yBAAgBF,EAAAC,EAAAC,cAAA,WAAhB,uBAEAF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,KAAGyJ,KAAK,wEAAR,uBAGH3J,EAAAC,EAAAC,cAAA,+HAMDF,EAAAC,EAAAC,cAAC4H,GAAD,KAKE9H,EAAAC,EAAAC,cAACgI,GAAD,iBAEElI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuH,GAAD,gBAEAzH,EAAAC,EAAAC,cAAC0J,EAAD,CACE/I,KAAMuI,EACNjI,eAAgBsH,EAChB3H,MAlCO,IAmCPC,OAlCQ,GAmCRC,mBAAoBA,EACpBC,gBAAiBqH,KAAK7B,MAAMxF,gBAC5BC,YAAa,SAACO,GAAD,OAAaoH,EAAS3H,EAAYO,KAC/CL,qBAAsBA,KAG1BpB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuH,GAAD,cAGAzH,EAAAC,EAAAC,cAAC2J,EAAD,CACEhJ,KAAM6F,EACNvF,eAAgBsH,EAChB3H,MAjDO,IAkDPC,OAjDQ,GAkDRC,mBAAoBA,EACpBC,gBAAiBqH,KAAK7B,MAAMxF,gBAC5BC,YAAa,SAACO,GAAD,OAAaoH,EAAS3H,EAAYO,KAC/CL,qBAAsBA,KAI1BpB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuH,GAAD,sBAEAzH,EAAAC,EAAAC,cAAC2J,EAAD,CACEhJ,KAAMqI,EACN/H,eAAgBsH,EAChB3H,MAhEO,IAiEPC,OAhEQ,GAiERC,mBAAoBA,EACpBC,gBAAiBqH,KAAK7B,MAAMxF,gBAC5BC,YAAa,SAACO,GAAD,OAAaoH,EAAS3H,EAAYO,KAC/CL,qBAAsBA,KAI1BpB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuH,GAAD,oBAGAzH,EAAAC,EAAAC,cAAC4J,EAAD,CACEjJ,KAAMoI,EACN9H,eAAgBsH,EAChB3H,MAhFO,IAiFPC,OAhFQ,GAiFRC,mBAAoBA,EACpBC,gBAAiBqH,KAAK7B,MAAMxF,gBAC5BC,YAAa,SAACO,GAAD,OAAaoH,EAAS3H,EAAYO,KAC/CL,qBAAsBA,KAI1BpB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuH,GAAD,yBAGAzH,EAAAC,EAAAC,cAAC6J,EAAD,CACElJ,KAAMgG,EACN1F,eAAgBsH,EAChB3H,MAhGO,IAiGPC,OAhGQ,GAiGRC,mBAAoBA,EACpBC,gBAAiBqH,KAAK7B,MAAMxF,gBAC5BC,YAAa,SAACO,GAAD,OAAaoH,EAAS3H,EAAYO,KAC/CL,qBAAsBA,MAK5BpB,EAAAC,EAAAC,cAAC8H,GAAD,KACEhI,EAAAC,EAAAC,cAACgI,GAAD,kBACAlI,EAAAC,EAAAC,cAAC8J,EAAA/J,EAAD,CAAUY,KAAMkI,EAAckB,MAAM,qBA/MPC,iBAAiBC,aAArC/B,GACZgC,OANT,WACE,MAAO,IAIYhC,GAGZiC,UAAY,CACjBxB,SAAUyB,IAAUC,KACpB7B,eAAgB4B,IAAUE,MAC1B5B,gBAAiB0B,IAAUE,MAC3B7B,YAAa2B,IAAUG,OACvBhC,kBAAmB6B,IAAUI,OAC7BC,aAAcL,IAAUM,MAAM,CAC5BC,iBAAkBP,IAAUI,SAE9BI,kBAAmBR,IAAUS,KAC7B/B,cAAesB,IAAUE,MACzBQ,OAAQV,IAAUC,KAAKU,YAdN7C,GAiBZ/H,aAAe,CACpB2K,OAAQ,SAAAvE,GAAK,OAAIA,IC3ErB,OAmBeyE,GAnBEC,yBAKfnL,EAAAC,EAAAC,cAACkL,EAAAnL,EAAD,CACEoL,oBAAoB,SACpBC,kBAAkB,SAClBC,iBAAiB,SACjBC,kBAAkB,EAClBC,YAAa,GACbC,gBAAgB,UAEhB1L,EAAAC,EAAAC,cAACyL,GAAD,MACA3L,EAAAC,EAAAC,cAAC0L,EAAA3L,EAAD,CAAYgK,MAAM,aAClBjK,EAAAC,EAAAC,cAAC2L,EAAA5L,EAAD,CAAe6L,iBAAe,0BCvBbC,8MASnBtF,MAAQ,CACNuF,KAAMC,EAAKzD,MAAMwD,MAAQ,MAG3BE,aAAe,SAAAvJ,GACb,IAAMqJ,EAAOrJ,EAAEE,OAAOnB,MAAMyK,OACZ,KAAZxJ,EAAEyJ,QACJH,EAAKzD,MAAM6D,OAAOL,GACdC,EAAKzD,MAAM8D,SACbL,EAAKzC,SAAS,CAAEwC,KAAM,SAK5BO,aAAe,SAAA5J,GACbsJ,EAAKzC,SAAS,CAAEwC,KAAMrJ,EAAEE,OAAOnB,WAGjC8K,WAAa,SAAA7J,GACNsJ,EAAKzD,MAAM8D,SACdL,EAAKzD,MAAM6D,OAAO1J,EAAEE,OAAOnB,gFAK7B,OACE1B,EAAAC,EAAAC,cAAA,SAAOuM,UACLC,KAAW,CACTC,KAAMrE,KAAKE,MAAMoE,QACjBC,WAAYvE,KAAKE,MAAM8D,UAEzBhD,KAAK,OACLwD,YAAaxE,KAAKE,MAAMsE,YACxBC,WAAW,EACXrL,MAAO4G,KAAK7B,MAAMuF,KAClBgB,OAAQ1E,KAAKkE,WACbS,SAAU3E,KAAKiE,aACfW,UAAW5E,KAAK4D,sBA9CmB/B,aCmB5BgD,GAnBA,SAAAzN,GAAA,IAAG0N,EAAH1N,EAAG0N,QAAH,OACbpN,EAAAC,EAAAC,cAAA,UAAQuM,UAAU,UAChBzM,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAACmN,GAAD,CACEf,SAAO,EACPD,OAAQ,SAACL,GACa,IAAhBA,EAAKxH,QACP4I,EAAQpB,IAGZc,YAAY,6BCdLhI,GAAW,WACXG,GAAc,cACdD,GAAY,YACZE,GAAgB,gBAChBC,GAAqB,qBACrBC,GAAkB,kBCHlBgI,GAAU,SAAApB,GAAI,MAAK,CAAE1C,KAAMgE,GAAgBtB,SAC3CuB,GAAa,SAAAtH,GAAE,MAAK,CAAEqD,KAAMgE,GAAmBrH,OAC/CuH,GAAW,SAACvH,EAAI+F,GAAL,MAAe,CAAE1C,KAAMgE,GAAiBrH,KAAI+F,SACvDyB,GAAe,SAAAxH,GAAE,MAAK,CAAEqD,KAAMgE,GAAqBrH,OACnDyH,GAAmB,iBAAO,CAAEpE,KAAMgE,KAClCK,GAAiB,iBAAO,CAAErE,KAAMgE,KAChCM,GAAsB,SAAA9G,GAAM,MAAK,CAAEwC,KDFX,wBCE8CxC,WCJpE+G,qBAAQ,KAAM,CAAET,YAAhBS,CAA2BV,aCmB3BW,GAnBF,SAAApO,GAAA,IAAGqO,EAAHrO,EAAGqO,OAAQC,EAAXtO,EAAWsO,SAAUC,EAArBvO,EAAqBuO,UAArB,OAGTjO,EAAAC,EAAAC,cAAA,KACEuM,UAAWC,KAAW,CAAEwB,SAAUH,IAClCtE,MAAO,CAAE0E,OAAQ,WACjBxK,QAAS,kBAAMsK,MAEdD,ICEQH,qBAVS,SAACpH,EAAO2H,GAAR,MAAsB,CAC5CL,OAAQK,EAAStH,SAAWL,EAAMI,mBAGT,SAACgC,EAAUuF,GAAX,MAAyB,CAClDH,UAAW,WACTpF,EAAS+E,GAAoBQ,EAAStH,YAI3B+G,CAGbC,ICZIO,IAAaC,GAAA,GAAAvL,OAAAwL,GAAA,EAAAxL,CAAAuL,GVLK,WUMV,OADKvL,OAAAwL,GAAA,EAAAxL,CAAAuL,GVHQ,cUKV,UAFEvL,OAAAwL,GAAA,EAAAxL,CAAAuL,GVJW,iBUOV,aAHDA,IAyCJE,GAnCA,SAAChG,GAAU,IAChBiG,EAAkDjG,EAAlDiG,YAAaC,EAAqClG,EAArCkG,eAAgBC,EAAqBnG,EAArBmG,iBAC/BC,EAA2B,IAAhBH,EAAoB,OAAS,QAC9C,OACEzO,EAAAC,EAAAC,cAAA,UAAQuM,UAAU,UAChBzM,EAAAC,EAAAC,cAAA,QAAMuM,UAAU,cACdzM,EAAAC,EAAAC,cAAA,cAASuO,GAAe,MAD1B,IAC0CG,EAD1C,SAGA5O,EAAAC,EAAAC,cAAA,MAAIuM,UAAU,WACX1J,OAAO8L,KAAKR,IAAepK,IAAI,SAAA6C,GAAM,OACpC9G,EAAAC,EAAAC,cAAA,MAAIyE,IAAKmC,GACP9G,EAAAC,EAAAC,cAAC4O,GAAD,CAAYhI,OAAQA,GACjBuH,GAAcvH,UAMnB4H,GACF1O,EAAAC,EAAAC,cAAA,UACEuM,UAAU,kBACV9I,QAASgL,GAFX,qBCzBaI,8MAQnBtI,MAAQ,CACNmG,SAAS,KAGXoC,kBAAoB,WAClB/C,EAAKzC,SAAS,CAAEoD,SAAS,OAG3BqC,WAAa,SAAChJ,EAAI+F,GACI,IAAhBA,EAAKxH,OACPyH,EAAKzD,MAAM+E,WAAWtH,GAEtBgG,EAAKzD,MAAMgF,SAASvH,EAAI+F,GAE1BC,EAAKzC,SAAS,CAAEoD,SAAS,6EAGlB,IAGHsC,EAHG7G,EAAAC,KAAAC,EACoCD,KAAKE,MAAxC7C,EADD4C,EACC5C,KAAM8H,EADPlF,EACOkF,aAAcF,EADrBhF,EACqBgF,WAyB5B,OArBE2B,EADE5G,KAAK7B,MAAMmG,QAEX5M,EAAAC,EAAAC,cAACmN,GAAD,CAAerB,KAAMrG,EAAKqG,KACXY,QAAStE,KAAK7B,MAAMmG,QACpBP,OAAQ,SAACL,GAAD,OAAU3D,EAAK4G,WAAWtJ,EAAKM,GAAI+F,MAI1DhM,EAAAC,EAAAC,cAAA,OAAKuM,UAAU,QACbzM,EAAAC,EAAAC,cAAA,SAAOuM,UAAU,SACVnD,KAAK,WACL6F,QAASxJ,EAAKK,UACdiH,SAAU,kBAAMQ,EAAa9H,EAAKM,OACzCjG,EAAAC,EAAAC,cAAA,SAAOkP,cAAe9G,KAAK0G,mBACxBrJ,EAAKqG,MAERhM,EAAAC,EAAAC,cAAA,UAAQuM,UAAU,UACV9I,QAAS,kBAAM4J,EAAW5H,EAAKM,QAM3CjG,EAAAC,EAAAC,cAAA,MAAIuM,UAAWC,KAAW,CACxB1G,UAAWL,EAAKK,UAChB4G,QAAStE,KAAK7B,MAAMmG,WAEnBsC,UAxD6B/E,aCgBvBkF,GAjBE,SAAA3P,GAAA,IAAG4P,EAAH5P,EAAG4P,cAAeC,EAAlB7P,EAAkB6P,QAAlB,OACfvP,EAAAC,EAAAC,cAAA,MAAIuM,UAAU,aACX6C,EAAcrL,IAAI,SAAA0B,GAAI,OACrB3F,EAAAC,EAAAC,cAACsP,GAADzM,OAAA0M,OAAA,CAAU9K,IAAKgB,EAAKM,GAAIN,KAAMA,GAAU4J,QCa/BG,GALS7B,kBATA,SAAApH,GAAK,MAAK,CAChC6I,cAAe3I,EAAgBF,KAGN,SAAAoC,GAAQ,MAAK,CACtC0G,QAASI,YAAmBC,EAAa/G,KAInBgF,CAGtBwB,ICoBaQ,GAjCK,SAAAnQ,GAAA,IAAGoQ,EAAHpQ,EAAGoQ,WAAYpB,EAAfhP,EAAegP,eAAgBa,EAA/B7P,EAA+B6P,QAA/B,OAEhBvP,EAAAC,EAAAC,cAAA,WAASuM,UAAU,UAEbqD,GACF9P,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,SACEuM,UAAU,aACVnD,KAAK,WACL6F,QAAST,IAAmBoB,EAC5BC,UAAQ,IAEV/P,EAAAC,EAAAC,cAAA,SAAOyD,QAAS4L,EAAQ7B,oBAG5B1N,EAAAC,EAAAC,cAAC8P,GAAD,QAEIF,GACF9P,EAAAC,EAAAC,cAAC+P,GAAD,CACEvB,eAAgBA,EAChBD,YAAaqB,EAAapB,EAC1BC,iBAAkBY,EAAQ5B,mBCRrBE,qBAXS,SAAApH,GAAK,MAAK,CAChCqJ,WAAYrJ,EAAMC,MAAMlC,OACxBkK,eAAgBzH,EAAsBR,KAIb,SAAAoC,GAAQ,MAAK,CACtC0G,QAASI,YAAmBC,EAAa/G,KAI5BgF,CAGbgC,ICTaK,GAPH,kBACVlQ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiQ,GAAD,MACAnQ,EAAAC,EAAAC,cAACkQ,GAAD,2BCCEC,GAAe,CACnB,CACErE,KAAM,YACNhG,WAAW,EACXC,GAAI,ICVR,IASeY,GATU,WAA8B,IAA7BJ,EAA6B6J,UAAA9L,OAAA,QAAAlB,IAAAgN,UAAA,GAAAA,UAAA,GlBH/B,WkBGoBjH,EAAWiH,UAAA9L,OAAA,EAAA8L,UAAA,QAAAhN,EACrD,OAAQ+F,EAAOC,MACb,IbCiC,wBaA/B,OAAOD,EAAOvC,OAChB,QACE,OAAOL,ICCE8J,GALKC,YAAgB,CAClC9J,MFYa,WAA6C,IAA9BD,EAA8B6J,UAAA9L,OAAA,QAAAlB,IAAAgN,UAAA,GAAAA,UAAA,GAAtBD,GAAchH,EAAQiH,UAAA9L,OAAA,EAAA8L,UAAA,QAAAhN,EAC1D,OAAQ+F,EAAOC,MACb,KAAKxE,GACH,SAAAtD,OAAAuB,OAAA0N,GAAA,EAAA1N,CACK0D,GADL,CAEE,CACER,GAAIQ,EAAMS,OAAO,SAACwJ,EAAO/K,GAAR,OAAiBtB,KAAKsM,IAAIhL,EAAKM,GAAIyK,KAAS,GAAK,EAClE1K,WAAW,EACXgG,KAAM3C,EAAO2C,QAInB,KAAK/G,GACH,OAAOwB,EAAMK,OAAO,SAAAnB,GAAI,OACtBA,EAAKM,KAAOoD,EAAOpD,KAGvB,KAAKjB,GACH,OAAOyB,EAAMxC,IAAI,SAAA0B,GAAI,OACnBA,EAAKM,KAAOoD,EAAOpD,GAAnBlD,OAAA6N,GAAA,EAAA7N,CAAA,GACO4C,EADP,CACaqG,KAAM3C,EAAO2C,OACxBrG,IAGN,KAAKT,GACH,OAAOuB,EAAMxC,IAAI,SAAA0B,GAAI,OACnBA,EAAKM,KAAOoD,EAAOpD,GAAnBlD,OAAA6N,GAAA,EAAA7N,CAAA,GACO4C,EADP,CACaK,WAAYL,EAAKK,YAC5BL,IAGN,KAAKR,GACH,IAAM0L,EAAepK,EAAMqK,MAAM,SAAAnL,GAAI,OAAIA,EAAKK,YAC9C,OAAOS,EAAMxC,IAAI,SAAA0B,GAAI,OAAA5C,OAAA6N,GAAA,EAAA7N,CAAA,GAChB4C,EADgB,CAEnBK,WAAY6K,MAGhB,KAAKzL,GACH,OAAOqB,EAAMK,OAAO,SAAAnB,GAAI,OAAuB,IAAnBA,EAAKK,YAEnC,QACE,OAAOS,IErDXI,sBCGIkK,WAAQC,YAAYC,GAKxB/F,GAASgG,eAGXC,iBACEnR,EAAAC,EAAAC,cAACkR,EAAA,SAAD,CAAUL,MAAOA,IACf/Q,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuD,SAAA,KACExD,EAAAC,EAAAC,cAACmR,GAAD,MACArR,EAAAC,EAAAC,cAACoR,GAAD,QAGJC,SAASC,eAAe","file":"static/js/main.a3bd9b7e.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Line = ({ path, stroke, fill, strokeWidth, strokeDasharray }) => {\n  return <path\n    d={path}\n    fill={fill}\n    stroke={stroke}\n    strokeWidth={strokeWidth}\n    strokeDasharray={strokeDasharray}\n    opacity={0.8}\n    />\n}\n\nLine.defaultProps = {\n  stroke:       'blue',\n  fill:         'none',\n  strokeWidth:  2\n}\n\nexport default Line;\n","import styled from 'styled-components'\n\nconst GraphContainer = styled.svg`\n  border: solid thin #eee;\n  cursor: pointer;\n  overflow: visible;\n`\n\nexport default GraphContainer;\n","import React, { useState, useEffect } from \"react\";\nimport styled from 'styled-components'\nimport * as d3 from 'd3';\nimport { clientPoint } from 'd3-selection';\nimport Line from './Line';\nimport GraphContainer from './GraphContainer'\n\nconst LineGraph = ({ data, width, height, setSelectedStateId, selectedStateId, jumpToState, currentStateId, resetToSelectedState }) => {\n  // add another data point to line graph, to align with category graph\n  // todo: think about a more robust way to do this... kinda hacky\n  const lastDataPoint = data.slice(-1)[0];\n  let graphData = data.concat([{ stateId: lastDataPoint.stateId + 1, value: lastDataPoint.value }])\n\n  const xScale = d3.scaleLinear()\n                 .domain(d3.extent(graphData, d => d.stateId))\n                 .range([1, width - 1]);\n\n  const yScale = d3.scaleLinear()\n                 .domain(d3.extent(graphData, d => d.value))\n                 .range([height - 1, 1]);\n\n  const line = d3.line()\n      .defined(d => !isNaN(d.value))\n      .curve(d3.curveStepAfter)\n      .x((d) => { return xScale(d.stateId); })\n      .y((d) => { return yScale(d.value); });\n\n  const currentStateMarker = d3.line().curve(d3.curveLinear)([\n      [xScale(currentStateId), yScale.range()[0]],\n      [xScale(currentStateId), yScale.range()[1]],\n    ])\n\n  const selectedStateMarker = d3.line().curve(d3.curveLinear)([\n      [xScale(selectedStateId), yScale.range()[0]],\n      [xScale(selectedStateId), yScale.range()[1]],\n    ])\n\n  const bisect = d3.bisector(d => d.stateId).right;\n\n  const getStateIdFromMouseEvent = (e) => {\n    const [xPos, yPos] = d3.clientPoint(e.target, e);\n    const position = {\n      x: xScale.invert(xPos),\n      y: yScale.invert(yPos)\n    };\n    const stateId = bisect(graphData, position.x, 1);\n\n    // clamp selected state to the last real data point\n    if (stateId <= lastDataPoint.stateId) {\n      return stateId;\n    } else {\n      return lastDataPoint.stateId\n    }\n  }\n\n  const onClick = (e) => {\n    const clickedStateId = getStateIdFromMouseEvent(e);\n    if (clickedStateId === selectedStateId) {\n      // unpin\n      setSelectedStateId(null);\n    } else {\n      setSelectedStateId(clickedStateId);\n    }\n  }\n\n  const onMouseMove = (e) => {\n    jumpToState(getStateIdFromMouseEvent(e));\n  }\n\n  const onMouseLeave = (e) => {\n    resetToSelectedState();\n  }\n\n  let currentValue;\n\n  if (currentStateId && data.find(d => d.stateId === currentStateId)) {\n    currentValue = data.find(d => d.stateId === currentStateId).value\n  }\n\n  let valueOverlay;\n  if (currentValue !== undefined) {\n    valueOverlay = <text\n          x={xScale(currentStateId) + 5}\n          y={12}\n          height={10}\n          width={50}\n          fill=\"#333\"\n          fontSize=\"12px\">\n          {currentValue}\n        </text>\n  }\n\n  return <>\n    <GraphContainer width={width} height={height} onMouseMove={onMouseMove} onClick={onClick} onMouseLeave={onMouseLeave}>\n      <Line path={line(graphData)} stroke='#a6d2ff' />\n      <Line path={currentStateMarker} stroke='#aaa' strokeDasharray={3} strokeWidth={1} />\n      { selectedStateId ? <Line path={selectedStateMarker} stroke='#ffcece' /> : null }\n\n      {valueOverlay}\n\n    </GraphContainer>\n\n\n  </>\n}\n\n\nexport default LineGraph;\n\n","import React, { useState, useEffect } from \"react\";\nimport styled from 'styled-components'\nimport * as d3 from 'd3';\nimport { clientPoint } from 'd3-selection';\nimport uniq from 'lodash/uniq'\nimport Line from './Line'\nimport GraphContainer from './GraphContainer'\n\nconst actionNameToSymbol = (actionName) => {\n  const symbols = {\n    \"@@INIT\": \"⏯\",\n    \"ADD_TODO\": \"➕\",\n    \"SET_VISIBILITY_FILTER\": \"🔍\",\n    \"EDIT_TODO\": \"✏️\",\n    \"DELETE_TODO\": \"🗑\",\n    \"COMPLETE_TODO\": \"✅\",\n    \"COMPLETE_ALL_TODOS\": \"✅\",\n    \"CLEAR_COMPLETED\": \"🗑\"\n  };\n\n  return symbols[actionName] || \"?\";\n}\n\nconst ActionsGraph = ({ data, width, height, setSelectedStateId, jumpToState, currentStateId, resetToSelectedState, selectedStateId }) => {\n\n  const xScale = d3.scaleBand()\n                 .domain(data.map(d => d.stateId))\n                 .range([1, width - 1])\n                 .padding(0.1);\n\n  const yScale = d3.scaleBand()\n                .domain(uniq(data.map(d => d.value)))\n                .range([height - 1, 1])\n                .padding(0.1);\n\n  const activeColor = d3.scaleOrdinal()\n                .domain(uniq(data.map(d => d.value)))\n                .range(d3.schemePastel1)\n\n  const xPosToValue = (xPos) => {\n    const index = Math.round((xPos / xScale.step()));\n    const domain = xScale.domain();\n    if (index >= domain.length) {\n      return domain.slice(-1)[0];\n    } else if (index < 0) {\n      return domain[0];\n    } else {\n      return domain[index]\n    }\n  }\n\n  const currentStateMarker = d3.line().curve(d3.curveLinear)([\n      [xScale(currentStateId), yScale.range()[0]],\n      [xScale(currentStateId), yScale.range()[1]],\n    ])\n\n  const selectedStateMarker = d3.line().curve(d3.curveLinear)([\n      [xScale(selectedStateId), yScale.range()[0]],\n      [xScale(selectedStateId), yScale.range()[1]],\n    ])\n\n\n  const bisect = d3.bisector(d => d.stateId).right;\n\n  const getStateIdFromMouseEvent = (e) => {\n    const [xPos, yPos] = d3.clientPoint(e.target, e);\n    return xPosToValue(xPos);\n  }\n\n  const onClick = (e) => {\n    const clickedStateId = getStateIdFromMouseEvent(e);\n    if (clickedStateId === selectedStateId) {\n      // unpin\n      setSelectedStateId(null);\n    } else {\n      setSelectedStateId(clickedStateId);\n    }\n  }\n\n  const onMouseMove = (e) => {\n    jumpToState(getStateIdFromMouseEvent(e));\n  }\n\n  const onMouseLeave = (e) => {\n    resetToSelectedState();\n  }\n\n  const icons = data.map(d =>\n    <text\n      key={d.stateId}\n      x={xScale(d.stateId) - 7}\n      y={25}\n      height={10}\n      width={xScale.bandwidth()}>\n      {actionNameToSymbol(d.value)}\n    </text>\n  )\n\n\n  let currentValue;\n\n  if (currentStateId && data.find(d => d.stateId === currentStateId)) {\n    currentValue = data.find(d => d.stateId === currentStateId).value\n  }\n\n  let valueOverlay;\n  if (currentValue !== undefined) {\n    valueOverlay = <text\n      x={xScale(currentStateId) + 5}\n      y={12}\n      height={10}\n      width={50}\n      fill=\"#333\"\n      fontSize=\"12px\">\n      {currentValue}\n    </text>\n  }\n\n  let selectionPin;\n  if (selectedStateId) {\n    selectionPin = <text\n      x={xScale(selectedStateId)}\n      y={-5}>📌</text>\n  }\n\n  return <>\n    <GraphContainer width={width} height={height} onMouseMove={onMouseMove} onClick={onClick} onMouseLeave={onMouseLeave}>\n      { icons }\n      <Line path={currentStateMarker} stroke='#aaa' strokeDasharray={3} strokeWidth={1} />\n      { selectedStateId ? <Line path={selectedStateMarker} stroke='#ffcece' /> : null }\n      {selectionPin}\n      {valueOverlay}\n    </GraphContainer>\n  </>\n}\n\n\nexport default ActionsGraph;\n\n","import React, { useState, useEffect } from \"react\";\nimport styled from 'styled-components'\nimport * as d3 from 'd3';\nimport { clientPoint } from 'd3-selection';\nimport uniq from 'lodash/uniq'\nimport Line from './Line'\nimport GraphContainer from './GraphContainer'\n\nconst CategoryGraph = ({ data, width, height, setSelectedStateId, selectedStateId, jumpToState, currentStateId, resetToSelectedState }) => {\n\n  const paddingRight = 50;\n\n  const xScale = d3.scaleBand()\n                 .domain(data.map(d => d.stateId))\n                 .range([1, width - 1])\n                 .padding(0.1);\n\n  const yScale = d3.scaleBand()\n                .domain(data[0][\"enumValues\"])\n                .range([height - 1, 1])\n                .padding(0.1);\n\n  const color = d3.scaleOrdinal()\n                .domain(uniq(data.map(d => d.value)))\n                .range(d3.schemePastel1)\n\n  const xPosToValue = (xPos) => {\n    const index = Math.round((xPos / xScale.step()));\n    const domain = xScale.domain();\n    if (index >= domain.length) {\n      return domain.slice(-1)[0];\n    } else if (index < 0) {\n      return domain[0];\n    } else {\n      return domain[index]\n    }\n  }\n\n  const currentStateMarker = d3.line().curve(d3.curveLinear)([\n      [xScale(currentStateId), yScale.range()[0]],\n      [xScale(currentStateId), yScale.range()[1]],\n    ])\n\n  const selectedStateMarker = d3.line().curve(d3.curveLinear)([\n      [xScale(selectedStateId), yScale.range()[0]],\n      [xScale(selectedStateId), yScale.range()[1]],\n    ])\n\n  const bisect = d3.bisector(d => d.stateId).right;\n\n  const getStateIdFromMouseEvent = (e) => {\n    const [xPos, yPos] = d3.clientPoint(e.target, e);\n    return xPosToValue(xPos);\n  }\n\n  const onClick = (e) => {\n    const clickedStateId = getStateIdFromMouseEvent(e);\n    if (clickedStateId === selectedStateId) {\n      // unpin\n      setSelectedStateId(null);\n    } else {\n      setSelectedStateId(clickedStateId);\n    }\n  }\n\n  const onMouseMove = (e) => {\n    jumpToState(getStateIdFromMouseEvent(e));\n  }\n\n  const onMouseLeave = (e) => {\n    resetToSelectedState();\n  }\n\n  const rects = data.map(d => {\n    return <rect\n      key={d.stateId}\n      fill={color(d.value)}\n      x={xScale(d.stateId)}\n      y={yScale(d.value)}\n      height={yScale.bandwidth()}\n      width={xScale.bandwidth()}>\n    </rect>\n  })\n\n\n  let currentValue;\n\n  if (currentStateId && data.find(d => d.stateId === currentStateId)) {\n    currentValue = data.find(d => d.stateId === currentStateId).value\n  }\n\n  let valueOverlay;\n  if (currentValue !== undefined) {\n    valueOverlay = <text\n          x={xScale(currentStateId) + 5}\n          y={12}\n          height={10}\n          width={50}\n          fill=\"#333\"\n          fontSize=\"12px\">\n          {currentValue}\n        </text>\n  }\n\n  return <>\n    <GraphContainer width={width} height={height} onMouseMove={onMouseMove} onClick={onClick} onMouseLeave={onMouseLeave}>\n      { rects }\n      <Line path={currentStateMarker} stroke='#aaa' strokeDasharray={3} strokeWidth={1} />\n      { selectedStateId ? <Line path={selectedStateMarker} stroke='#ffcece' /> : null }\n      {valueOverlay}\n    </GraphContainer>\n  </>\n}\n\n\nexport default CategoryGraph;\n\n","import React, { useState, useEffect } from \"react\";\nimport styled from 'styled-components'\nimport * as d3 from 'd3';\nimport { clientPoint } from 'd3-selection';\nimport uniq from 'lodash/uniq'\nimport Line from './Line'\nimport GraphContainer from './GraphContainer'\nimport Color from 'color'\n\nconst color = d3.scaleOrdinal()\n              .domain([])\n              .range([\"#fbb4ae\", \"#ccebc5\"])\n\nconst CollectionGraph = ({ data, width, height, setSelectedStateId, selectedStateId, jumpToState, currentStateId, resetToSelectedState }) => {\n\n  const xScale = d3.scaleBand()\n                 .domain(data.map(d => d.stateId))\n                 .range([1, width - 1])\n                 .padding(0.1);\n\n  const yScale = d3.scaleBand()\n                .domain([])\n                .range([height - 1, 1])\n                .padding(0.1);\n\n  const xPosToValue = (xPos) => {\n    const index = Math.round((xPos / xScale.step()));\n    const domain = xScale.domain();\n    if (index >= domain.length) {\n      return domain.slice(-1)[0];\n    } else if (index < 0) {\n      return domain[0];\n    } else {\n      return domain[index]\n    }\n  }\n\n  const currentStateMarker = d3.line().curve(d3.curveLinear)([\n      [xScale(currentStateId), height - 1],\n      [xScale(currentStateId), yScale.range()[1]],\n    ])\n\n  const selectedStateMarker = d3.line().curve(d3.curveLinear)([\n      [xScale(selectedStateId), yScale.range()[0]],\n      [xScale(selectedStateId), yScale.range()[1]],\n    ])\n\n\n  const bisect = d3.bisector(d => d.stateId).right;\n\n  const getStateIdFromMouseEvent = (e) => {\n    const [xPos, yPos] = d3.clientPoint(e.target, e);\n    return xPosToValue(xPos);\n  }\n\n  const onClick = (e) => {\n    const clickedStateId = getStateIdFromMouseEvent(e);\n    if (clickedStateId === selectedStateId) {\n      // unpin\n      setSelectedStateId(null);\n    } else {\n      setSelectedStateId(clickedStateId);\n    }\n  }\n\n  const onMouseMove = (e) => {\n    jumpToState(getStateIdFromMouseEvent(e));\n  }\n\n  const onMouseLeave = (e) => {\n    resetToSelectedState();\n  }\n\n  const dots = data.flatMap(d => {\n    return d.value.map((todo, index) => {\n      const column = Math.floor(index / 5);\n      const row = index % 5;\n      const circleColor = color(todo.completed);\n\n      return <circle\n        key={`${d.stateId}:${todo.id}`}\n        fill={circleColor}\n        stroke={Color(circleColor).desaturate(0.5).darken(0.5)}\n        strokeWidth={1}\n        cx={xScale(d.stateId) + (column * 5)}\n        cy={4 + (row * 7) + (column * 4)}\n        r={3}\n       />\n    })\n  })\n\n\n  let currentValue;\n\n  if (currentStateId && data.find(d => d.stateId === currentStateId)) {\n    currentValue = data.find(d => d.stateId === currentStateId).value\n  }\n\n  let valueOverlay;\n  if (currentValue !== undefined) {\n    valueOverlay = <text\n          x={xScale(currentStateId) + 5}\n          y={12}\n          height={10}\n          width={50}\n          fill=\"#333\"\n          fontSize=\"12px\">\n          {currentValue.length} todos\n        </text>\n  }\n\n  return <>\n    <GraphContainer width={width} height={height} onMouseMove={onMouseMove} onClick={onClick} onMouseLeave={onMouseLeave}>\n      { dots }\n      <Line path={currentStateMarker} stroke='#aaa' strokeDasharray={3} strokeWidth={1} />\n      { selectedStateId ? <Line path={selectedStateMarker} stroke='#ffcece' /> : null }\n      {valueOverlay}\n    </GraphContainer>\n  </>\n}\n\n\nexport default CollectionGraph;\n\n","import { createSelector } from 'reselect'\nimport { SHOW_ALL, SHOW_COMPLETED, SHOW_ACTIVE } from '../constants/TodoFilters'\n\nconst getVisibilityFilter = state => state.visibilityFilter\nconst getTodos = state => state.todos\n\nexport const getVisibleTodos = createSelector(\n  [getVisibilityFilter, getTodos],\n  (visibilityFilter, todos) => {\n    switch (visibilityFilter) {\n      case SHOW_ALL:\n        return todos\n      case SHOW_COMPLETED:\n        return todos.filter(t => t.completed)\n      case SHOW_ACTIVE:\n        return todos.filter(t => !t.completed)\n      default:\n        throw new Error('Unknown filter: ' + visibilityFilter)\n    }\n  }\n)\n\nexport const getCompletedTodoCount = createSelector(\n  [getTodos],\n  todos => (\n    todos.reduce((count, todo) =>\n      todo.completed ? count + 1 : count,\n      0\n    )\n  )\n)","export const SHOW_ALL = 'show_all'\nexport const SHOW_COMPLETED = 'show_completed'\nexport const SHOW_ACTIVE = 'show_active'\n","import React, { Component, PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { ActionCreators } from 'redux-devtools';\nimport styled from 'styled-components'\nimport LineGraph from './LineGraph'\nimport ActionsGraph from './ActionsGraph'\nimport CategoryGraph from './CategoryGraph'\nimport CollectionGraph from './CollectionGraph'\nimport mapValues from 'lodash/mapValues'\nimport { getVisibleTodos, getCompletedTodoCount } from '../selectors'\nimport JSONTree from 'react-json-tree'\nimport { SHOW_ALL, SHOW_COMPLETED, SHOW_ACTIVE } from '../constants/TodoFilters'\n\nconst { reset, jumpToState } = ActionCreators;\n\nconst Panel = styled.div`\n  display: grid;\n  grid-template-columns: 150px auto 250px;\n  grid-template-rows: auto;\n  grid-template-areas: \"instructions visualizations state\";\n  gap: 30px;\n\n  padding: 20px;\n  font-size: 14px;\n  font-weight: normal;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n`\n\nconst GraphLabel = styled.div`\n  margin-right: 10px;\n  display: inline-block;\n  width: 100px;\n  text-align: right;\n  vertical-align: top;\n  padding-top: 9px;\n  font-size: 12px;\n  color: #5d7395;\n`\n\nconst GraphColumn = styled.div`\n  display: inline-block;\n  width: 430px;\n`\n\nconst Instructions = styled.div`\n  grid-area: instructions;\n`\n\nconst Visualizations = styled.div`\n  grid-area: visualizations;\n  z-index: 10;\n`\n\nconst State = styled.div`\n  grid-area: state;\n`\n\nconst PanelColumnLabel = styled.div`\n  text-transform: uppercase;\n  font-weight: bold;\n  color: #aaa;\n  font-size: 12px;\n`\n\nfunction reducer() {\n  return {};\n}\n\n// Todo: switch to functional component\nexport default class VisMonitor extends (PureComponent || Component) {\n  static update = reducer;\n\n  static propTypes = {\n    dispatch: PropTypes.func,\n    computedStates: PropTypes.array,\n    stagedActionIds: PropTypes.array,\n    actionsById: PropTypes.object,\n    currentStateIndex: PropTypes.number,\n    monitorState: PropTypes.shape({\n      initialScrollTop: PropTypes.number\n    }),\n    preserveScrollTop: PropTypes.bool,\n    stagedActions: PropTypes.array,\n    select: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    select: state => state,\n  };\n\n  state = {\n    // start with no state selected (ie, we track current state)\n    selectedStateId: null\n  };\n\n  render() {\n    const {\n      currentStateIndex, computedStates, actionsById, stagedActionIds, skippedActionIds, dispatch, stagedActions\n    } = this.props;\n\n    // if the selected state is the most recent state,\n    // we increment it to match the current state.\n    // this way, by default, the selected state follows the\n    // current state, but if the user selects a past state,\n    // it doesn't follow current state.\n\n    const currentState = computedStates[currentStateIndex].state\n\n    const todosLength = computedStates.map((state, index) => ({\n      stateId: index,\n      value: state.state.todos.length\n    }))\n\n    const visibleTodosLength = computedStates.map((state, index) => ({\n      stateId: index,\n      value: getVisibleTodos(state.state).length\n    }))\n\n    const completedTodosCount = computedStates.map((state, index) => ({\n      stateId: index,\n      value: getCompletedTodoCount(state.state)\n    }))\n\n    const todos = computedStates.map((state, index) => ({\n      stateId: index,\n      value: state.state.todos\n    }))\n\n    const visibleTodos = computedStates.map((state, index) => ({\n      stateId: index,\n      value: getVisibleTodos(state.state)\n    }))\n\n    const visibilityFilter = computedStates.map((state, index) => ({\n      stateId: index,\n      value: state.state.visibilityFilter,\n      enumValues: [\n        SHOW_ALL,\n        SHOW_COMPLETED,\n        SHOW_ACTIVE\n      ]\n    }))\n\n    const actionsForGraph = stagedActionIds.map(id => ({\n      stateId: id,\n      value: actionsById[id].action.type\n    }))\n\n    const resetToSelectedState = () => {\n      let stateIndexToJump;\n      // if no state is selected, jump to most recent state\n      if (this.state.selectedStateId === null) {\n        stateIndexToJump = computedStates.length - 1;\n      } else {\n        stateIndexToJump = this.state.selectedStateId;\n      }\n\n      dispatch(jumpToState(stateIndexToJump));\n    }\n\n    const setSelectedStateId = (stateId) => {\n      if (stateId !== computedStates.length - 1) {\n        this.setState({ selectedStateId: stateId })\n      } else {\n        this.setState({ selectedStateId: null })\n      }\n    }\n\n    const graphWidth = 300;\n    const graphHeight = 35;\n    const paddingRight = 50;\n\n    return (\n      <Panel>\n        <Instructions>\n          <h3 style={{marginTop: 0}}>MVU Visualizer</h3>\n\n          <p>Geoffrey Litt<br />6.894 Final Project</p>\n\n          <p>\n            <a href=\"https://github.mit.edu/6894-sp20/FP-Program-Execution-Visualization/\">project background</a>\n          </p>\n\n         <p>\n           Try it out! Interact with the todos app, hover over the timeline to rewind, click on timeline to pin a past state\n         </p>\n\n        </Instructions>\n\n        <Visualizations>\n{/*          todo: all the graph components share a ton of\n          functionality; clearly need to DRY/generalize\n          across them.*/}\n\n          <PanelColumnLabel>Timeline</PanelColumnLabel>\n\n            <div>\n              <GraphLabel>actions</GraphLabel>\n\n              <ActionsGraph\n                data={actionsForGraph}\n                currentStateId={currentStateIndex}\n                width={graphWidth}\n                height={graphHeight}\n                setSelectedStateId={setSelectedStateId}\n                selectedStateId={this.state.selectedStateId}\n                jumpToState={(stateId) => dispatch(jumpToState(stateId))}\n                resetToSelectedState={resetToSelectedState} />\n            </div>\n\n            <div>\n              <GraphLabel>todos</GraphLabel>\n\n              {/* todo: could dynamically define the state -> value function? */}\n              <CollectionGraph\n                data={todos}\n                currentStateId={currentStateIndex}\n                width={graphWidth}\n                height={graphHeight}\n                setSelectedStateId={setSelectedStateId}\n                selectedStateId={this.state.selectedStateId}\n                jumpToState={(stateId) => dispatch(jumpToState(stateId))}\n                resetToSelectedState={resetToSelectedState}\n                />\n            </div>\n\n            <div>\n              <GraphLabel>visible todos</GraphLabel>\n\n              <CollectionGraph\n                data={visibleTodos}\n                currentStateId={currentStateIndex}\n                width={graphWidth}\n                height={graphHeight}\n                setSelectedStateId={setSelectedStateId}\n                selectedStateId={this.state.selectedStateId}\n                jumpToState={(stateId) => dispatch(jumpToState(stateId))}\n                resetToSelectedState={resetToSelectedState}\n                />\n            </div>\n\n            <div>\n              <GraphLabel># completed</GraphLabel>\n\n              {/* todo: could dynamically define the state -> value function? */}\n              <LineGraph\n                data={completedTodosCount}\n                currentStateId={currentStateIndex}\n                width={graphWidth}\n                height={graphHeight}\n                setSelectedStateId={setSelectedStateId}\n                selectedStateId={this.state.selectedStateId}\n                jumpToState={(stateId) => dispatch(jumpToState(stateId))}\n                resetToSelectedState={resetToSelectedState}\n                />\n            </div>\n\n            <div>\n              <GraphLabel>visibilityFilter</GraphLabel>\n\n              {/* todo: could dynamically define the state -> value function? */}\n              <CategoryGraph\n                data={visibilityFilter}\n                currentStateId={currentStateIndex}\n                width={graphWidth}\n                height={graphHeight}\n                setSelectedStateId={setSelectedStateId}\n                selectedStateId={this.state.selectedStateId}\n                jumpToState={(stateId) => dispatch(jumpToState(stateId))}\n                resetToSelectedState={resetToSelectedState}\n                />\n            </div>\n          </Visualizations>\n\n          <State>\n            <PanelColumnLabel>App state</PanelColumnLabel>\n            <JSONTree data={currentState} theme=\"monokai\" />\n          </State>\n      </Panel>\n    );\n  }\n}\n","import React from 'react';\n\n// Exported from redux-devtools\nimport { createDevTools } from 'redux-devtools';\n\n// Monitors are separate packages, and you can make a custom one\nimport LogMonitor from 'redux-devtools-log-monitor';\nimport DockMonitor from 'redux-devtools-dock-monitor';\nimport SliderMonitor from 'redux-slider-monitor'\nimport VisMonitor from '../devtools/ReduxVisMonitor'\n\n// createDevTools takes a monitor and produces a DevTools component\nconst DevTools = createDevTools(\n  // Monitors are individually adjustable with props.\n  // Consult their repositories to learn about those props.\n  // Here, we put LogMonitor inside a DockMonitor.\n  // Note: DockMonitor is visible by default.\n  <DockMonitor\n    toggleVisibilityKey=\"ctrl-h\"\n    changePositionKey=\"ctrl-q\"\n    changeMonitorKey='ctrl-m'\n    defaultIsVisible={true}\n    defaultSize={0.3}\n    defaultPosition=\"bottom\"\n  >\n    <VisMonitor />\n    <LogMonitor theme=\"tomorrow\" />\n    <SliderMonitor keyboardEnabled />\n  </DockMonitor>\n);\n\nexport default DevTools;\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\nexport default class TodoTextInput extends Component {\n  static propTypes = {\n    onSave: PropTypes.func.isRequired,\n    text: PropTypes.string,\n    placeholder: PropTypes.string,\n    editing: PropTypes.bool,\n    newTodo: PropTypes.bool\n  }\n\n  state = {\n    text: this.props.text || ''\n  }\n\n  handleSubmit = e => {\n    const text = e.target.value.trim()\n    if (e.which === 13) {\n      this.props.onSave(text)\n      if (this.props.newTodo) {\n        this.setState({ text: '' })\n      }\n    }\n  }\n\n  handleChange = e => {\n    this.setState({ text: e.target.value })\n  }\n\n  handleBlur = e => {\n    if (!this.props.newTodo) {\n      this.props.onSave(e.target.value)\n    }\n  }\n\n  render() {\n    return (\n      <input className={\n        classnames({\n          edit: this.props.editing,\n          'new-todo': this.props.newTodo\n        })}\n        type=\"text\"\n        placeholder={this.props.placeholder}\n        autoFocus={true}\n        value={this.state.text}\n        onBlur={this.handleBlur}\n        onChange={this.handleChange}\n        onKeyDown={this.handleSubmit} />\n    )\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport TodoTextInput from './TodoTextInput'\n\nconst Header = ({ addTodo }) => (\n  <header className=\"header\">\n    <h1>todos</h1>\n    <TodoTextInput\n      newTodo\n      onSave={(text) => {\n        if (text.length !== 0) {\n          addTodo(text)\n        }\n      }}\n      placeholder=\"What needs to be done?\"\n    />\n  </header>\n)\n\nHeader.propTypes = {\n  addTodo: PropTypes.func.isRequired\n}\n\nexport default Header\n","export const ADD_TODO = 'ADD_TODO'\nexport const DELETE_TODO = 'DELETE_TODO'\nexport const EDIT_TODO = 'EDIT_TODO'\nexport const COMPLETE_TODO = 'COMPLETE_TODO'\nexport const COMPLETE_ALL_TODOS = 'COMPLETE_ALL_TODOS'\nexport const CLEAR_COMPLETED = 'CLEAR_COMPLETED'\nexport const SET_VISIBILITY_FILTER = 'SET_VISIBILITY_FILTER'\n","import * as types from '../constants/ActionTypes'\n\nexport const addTodo = text => ({ type: types.ADD_TODO, text })\nexport const deleteTodo = id => ({ type: types.DELETE_TODO, id })\nexport const editTodo = (id, text) => ({ type: types.EDIT_TODO, id, text })\nexport const completeTodo = id => ({ type: types.COMPLETE_TODO, id })\nexport const completeAllTodos = () => ({ type: types.COMPLETE_ALL_TODOS })\nexport const clearCompleted = () => ({ type: types.CLEAR_COMPLETED })\nexport const setVisibilityFilter = filter => ({ type: types.SET_VISIBILITY_FILTER, filter})\n","import { connect } from 'react-redux'\nimport Header from '../components/Header'\nimport { addTodo } from '../actions'\n\nexport default connect(null, { addTodo })(Header)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\nconst Link = ({ active, children, setFilter }) =>\n  (\n    // eslint-disable-next-line jsx-a11y/anchor-is-valid\n    <a\n      className={classnames({ selected: active })}\n      style={{ cursor: 'pointer' }}\n      onClick={() => setFilter()}\n    >\n      {children}\n    </a>\n  )\n\n\nLink.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  setFilter: PropTypes.func.isRequired\n}\n\nexport default Link\n","import { connect } from 'react-redux'\nimport { setVisibilityFilter } from '../actions'\nimport Link from '../components/Link'\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.visibilityFilter\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  setFilter: () => {\n    dispatch(setVisibilityFilter(ownProps.filter))\n  }\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Link)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport FilterLink from '../containers/FilterLink'\nimport { SHOW_ALL, SHOW_COMPLETED, SHOW_ACTIVE } from '../constants/TodoFilters'\n\nconst FILTER_TITLES = {\n  [SHOW_ALL]: 'All',\n  [SHOW_ACTIVE]: 'Active',\n  [SHOW_COMPLETED]: 'Completed'\n}\n\nconst Footer = (props) => {\n  const { activeCount, completedCount, onClearCompleted } = props\n  const itemWord = activeCount === 1 ? 'item' : 'items'\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        <strong>{activeCount || 'No'}</strong> {itemWord} left\n      </span>\n      <ul className=\"filters\">\n        {Object.keys(FILTER_TITLES).map(filter =>\n          <li key={filter}>\n            <FilterLink filter={filter}>\n              {FILTER_TITLES[filter]}\n            </FilterLink>\n          </li>\n        )}\n      </ul>\n      {\n        !!completedCount &&\n        <button\n          className=\"clear-completed\"\n          onClick={onClearCompleted}\n        >Clear completed</button>\n        \n      }\n    </footer>\n  )\n}\n\nFooter.propTypes = {\n  completedCount: PropTypes.number.isRequired,\n  activeCount: PropTypes.number.isRequired,\n  onClearCompleted: PropTypes.func.isRequired,\n}\n\nexport default Footer\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport TodoTextInput from './TodoTextInput'\n\nexport default class TodoItem extends Component {\n  static propTypes = {\n    todo: PropTypes.object.isRequired,\n    editTodo: PropTypes.func.isRequired,\n    deleteTodo: PropTypes.func.isRequired,\n    completeTodo: PropTypes.func.isRequired\n  }\n\n  state = {\n    editing: false\n  }\n\n  handleDoubleClick = () => {\n    this.setState({ editing: true })\n  }\n\n  handleSave = (id, text) => {\n    if (text.length === 0) {\n      this.props.deleteTodo(id)\n    } else {\n      this.props.editTodo(id, text)\n    }\n    this.setState({ editing: false })\n  }\n\n  render() {\n    const { todo, completeTodo, deleteTodo } = this.props\n\n    let element\n    if (this.state.editing) {\n      element = (\n        <TodoTextInput text={todo.text}\n                       editing={this.state.editing}\n                       onSave={(text) => this.handleSave(todo.id, text)} />\n      )\n    } else {\n      element = (\n        <div className=\"view\">\n          <input className=\"toggle\"\n                 type=\"checkbox\"\n                 checked={todo.completed}\n                 onChange={() => completeTodo(todo.id)} />\n          <label onDoubleClick={this.handleDoubleClick}>\n            {todo.text}\n          </label>\n          <button className=\"destroy\"\n                  onClick={() => deleteTodo(todo.id)} />\n        </div>\n      )\n    }\n\n    return (\n      <li className={classnames({\n        completed: todo.completed,\n        editing: this.state.editing\n      })}>\n        {element}\n      </li>\n    )\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport TodoItem from './TodoItem'\n\nconst TodoList = ({ filteredTodos, actions }) => (\n  <ul className=\"todo-list\">\n    {filteredTodos.map(todo =>\n      <TodoItem key={todo.id} todo={todo} {...actions} />\n    )}\n  </ul>\n)\n\nTodoList.propTypes = {\n  filteredTodos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    completed: PropTypes.bool.isRequired,\n    text: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n  actions: PropTypes.object.isRequired\n}\n\nexport default TodoList\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as TodoActions from '../actions'\nimport TodoList from '../components/TodoList'\nimport { getVisibleTodos } from '../selectors'\n\nconst mapStateToProps = state => ({\n  filteredTodos: getVisibleTodos(state)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(TodoActions, dispatch)\n})\n\n\nconst VisibleTodoList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoList)\n\nexport default VisibleTodoList\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Footer from './Footer'\nimport VisibleTodoList from '../containers/VisibleTodoList'\n\nconst MainSection = ({ todosCount, completedCount, actions }) =>\n  (\n    <section className=\"main\">\n      {\n        !!todosCount && \n        <span>\n          <input\n            className=\"toggle-all\"\n            type=\"checkbox\"\n            checked={completedCount === todosCount}\n            readOnly\n          />\n          <label onClick={actions.completeAllTodos}/>\n        </span>\n      }\n      <VisibleTodoList />\n      {\n        !!todosCount &&\n        <Footer\n          completedCount={completedCount}\n          activeCount={todosCount - completedCount}\n          onClearCompleted={actions.clearCompleted}\n        />\n      }\n    </section>\n  )\n\nMainSection.propTypes = {\n  todosCount: PropTypes.number.isRequired,\n  completedCount: PropTypes.number.isRequired,\n  actions: PropTypes.object.isRequired\n}\n\nexport default MainSection;","import { connect } from 'react-redux'\nimport * as TodoActions from '../actions'\nimport { bindActionCreators } from 'redux'\nimport MainSection from '../components/MainSection'\nimport { getCompletedTodoCount } from '../selectors'\n\n\nconst mapStateToProps = state => ({\n  todosCount: state.todos.length,\n  completedCount: getCompletedTodoCount(state)\n})\n\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(TodoActions, dispatch)\n})\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MainSection)\n\n","import React from 'react'\nimport Header from '../containers/Header'\nimport MainSection from '../containers/MainSection'\nimport DevTools from '../containers/DevTools'\n\nconst App = () => (\n  <div>\n    <Header />\n    <MainSection />\n  </div>\n)\n\nexport default App\n","import {\n  ADD_TODO,\n  DELETE_TODO,\n  EDIT_TODO,\n  COMPLETE_TODO,\n  COMPLETE_ALL_TODOS,\n  CLEAR_COMPLETED\n} from '../constants/ActionTypes'\n\nconst initialState = [\n  {\n    text: 'Use Redux',\n    completed: false,\n    id: 0\n  }\n]\n\nexport default function todos(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TODO:\n      return [\n        ...state,\n        {\n          id: state.reduce((maxId, todo) => Math.max(todo.id, maxId), -1) + 1,\n          completed: false,\n          text: action.text\n        }\n      ]\n\n    case DELETE_TODO:\n      return state.filter(todo =>\n        todo.id !== action.id\n      )\n\n    case EDIT_TODO:\n      return state.map(todo =>\n        todo.id === action.id ?\n          { ...todo, text: action.text } :\n          todo\n      )\n\n    case COMPLETE_TODO:\n      return state.map(todo =>\n        todo.id === action.id ?\n          { ...todo, completed: !todo.completed } :\n          todo\n      )\n\n    case COMPLETE_ALL_TODOS:\n      const areAllMarked = state.every(todo => todo.completed)\n      return state.map(todo => ({\n        ...todo,\n        completed: !areAllMarked\n      }))\n\n    case CLEAR_COMPLETED:\n      return state.filter(todo => todo.completed === false)\n\n    default:\n      return state\n  }\n}\n","import { SET_VISIBILITY_FILTER } from '../constants/ActionTypes'\nimport { SHOW_ALL } from '../constants/TodoFilters'\n\nconst visibilityFilter = (state = SHOW_ALL, action) => {\n  switch (action.type) {\n    case SET_VISIBILITY_FILTER:\n      return action.filter\n    default:\n      return state\n  }\n}\n\nexport default visibilityFilter","import { combineReducers } from 'redux'\nimport todos from './todos'\nimport visibilityFilter from './visibilityFilter'\n\nconst rootReducer = combineReducers({\n  todos,\n  visibilityFilter\n})\n\nexport default rootReducer\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport DevTools from './containers/DevTools'\nimport App from './components/App'\nimport reducer from './reducers'\nimport 'todomvc-app-css/index.css'\n\nconst store = createStore(reducer,\n  // stock redux devtools\n  // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n\n  // our custom devtools\n  DevTools.instrument()\n)\n\nrender(\n  <Provider store={store}>\n    <>\n      <App />\n      <DevTools />\n    </>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}